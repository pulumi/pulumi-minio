// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as minio from "@pulumi/minio";
 *
 * const example = minio.getIamPolicyDocument({
 *     statements: [
 *         {
 *             sid: "1",
 *             actions: [
 *                 "s3:ListAllMyBuckets",
 *                 "s3:GetBucketLocation",
 *             ],
 *             resources: ["arn:aws:s3:::*"],
 *         },
 *         {
 *             actions: ["s3:ListBucket"],
 *             resources: ["arn:aws:s3:::state-terraform-s3"],
 *             conditions: [{
 *                 test: "StringLike",
 *                 variable: "s3:prefix",
 *                 values: [
 *                     "",
 *                     "home/",
 *                 ],
 *             }],
 *         },
 *         {
 *             actions: ["s3:PutObject"],
 *             resources: [
 *                 "arn:aws:s3:::state-terraform-s3",
 *                 "arn:aws:s3:::state-terraform-s3/*",
 *             ],
 *         },
 *     ],
 * });
 * const testPolicy = new minio.IamPolicy("test_policy", {
 *     name: "state-terraform-s3",
 *     policy: example.then(example => example.json),
 * });
 * ```
 */
export function getIamPolicyDocument(args?: GetIamPolicyDocumentArgs, opts?: pulumi.InvokeOptions): Promise<GetIamPolicyDocumentResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("minio:index/getIamPolicyDocument:getIamPolicyDocument", {
        "overrideJson": args.overrideJson,
        "policyId": args.policyId,
        "sourceJson": args.sourceJson,
        "statements": args.statements,
        "version": args.version,
    }, opts);
}

/**
 * A collection of arguments for invoking getIamPolicyDocument.
 */
export interface GetIamPolicyDocumentArgs {
    overrideJson?: string;
    policyId?: string;
    sourceJson?: string;
    statements?: inputs.GetIamPolicyDocumentStatement[];
    version?: string;
}

/**
 * A collection of values returned by getIamPolicyDocument.
 */
export interface GetIamPolicyDocumentResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly json: string;
    readonly overrideJson?: string;
    readonly policyId?: string;
    readonly sourceJson?: string;
    readonly statements?: outputs.GetIamPolicyDocumentStatement[];
    readonly version?: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as minio from "@pulumi/minio";
 *
 * const example = minio.getIamPolicyDocument({
 *     statements: [
 *         {
 *             sid: "1",
 *             actions: [
 *                 "s3:ListAllMyBuckets",
 *                 "s3:GetBucketLocation",
 *             ],
 *             resources: ["arn:aws:s3:::*"],
 *         },
 *         {
 *             actions: ["s3:ListBucket"],
 *             resources: ["arn:aws:s3:::state-terraform-s3"],
 *             conditions: [{
 *                 test: "StringLike",
 *                 variable: "s3:prefix",
 *                 values: [
 *                     "",
 *                     "home/",
 *                 ],
 *             }],
 *         },
 *         {
 *             actions: ["s3:PutObject"],
 *             resources: [
 *                 "arn:aws:s3:::state-terraform-s3",
 *                 "arn:aws:s3:::state-terraform-s3/*",
 *             ],
 *         },
 *     ],
 * });
 * const testPolicy = new minio.IamPolicy("test_policy", {
 *     name: "state-terraform-s3",
 *     policy: example.then(example => example.json),
 * });
 * ```
 */
export function getIamPolicyDocumentOutput(args?: GetIamPolicyDocumentOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetIamPolicyDocumentResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("minio:index/getIamPolicyDocument:getIamPolicyDocument", {
        "overrideJson": args.overrideJson,
        "policyId": args.policyId,
        "sourceJson": args.sourceJson,
        "statements": args.statements,
        "version": args.version,
    }, opts);
}

/**
 * A collection of arguments for invoking getIamPolicyDocument.
 */
export interface GetIamPolicyDocumentOutputArgs {
    overrideJson?: pulumi.Input<string>;
    policyId?: pulumi.Input<string>;
    sourceJson?: pulumi.Input<string>;
    statements?: pulumi.Input<pulumi.Input<inputs.GetIamPolicyDocumentStatementArgs>[]>;
    version?: pulumi.Input<string>;
}
