// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface GetIamPolicyDocumentStatement {
    actions?: string[];
    conditions?: outputs.GetIamPolicyDocumentStatementCondition[];
    effect?: string;
    principal?: string;
    resources?: string[];
    sid?: string;
}

export interface GetIamPolicyDocumentStatementCondition {
    test: string;
    values: string[];
    variable: string;
}

export interface IlmPolicyRule {
    expiration?: string;
    filter?: string;
    /**
     * The ID of this resource.
     */
    id: string;
    noncurrentVersionExpirationDays?: number;
    status: string;
    tags?: {[key: string]: any};
}

export interface S3BucketNotificationQueue {
    events: string[];
    filterPrefix?: string;
    filterSuffix?: string;
    /**
     * The ID of this resource.
     */
    id: string;
    queueArn: string;
}

export interface S3BucketReplicationRule {
    /**
     * Rule ARN genrated by MinIO
     */
    arn: string;
    /**
     * Whether or not to synchronise marker deletion
     */
    deleteMarkerReplication?: boolean;
    /**
     * Whether or not to propagate deletion
     */
    deleteReplication?: boolean;
    /**
     * Whether or not this rule is enabled
     */
    enabled?: boolean;
    /**
     * Whether or not to synchronise object created prior the replication configuration
     */
    existingObjectReplication?: boolean;
    /**
     * Rule ID generated by MinIO
     */
    id: string;
    /**
     * Whether or not to synchonise buckets and objects metadata (such as locks). This must be enabled to achieve a two-way replication
     */
    metadataSync?: boolean;
    /**
     * Bucket prefix object must be in to be syncronised
     */
    prefix?: string;
    /**
     * Rule priority. If omitted, the inverted index will be used as priority. This means that the first rule definition will have the higher priority
     */
    priority?: number;
    /**
     * Tags which objects must have to be syncronised
     */
    tags?: {[key: string]: any};
    /**
     * Bucket prefix
     */
    target: outputs.S3BucketReplicationRuleTarget;
}

export interface S3BucketReplicationRuleTarget {
    /**
     * Access key for the replication service account in the target MinIO
     */
    accessKey: string;
    /**
     * Maximum bandwidth in byte per second that MinIO can used when syncronysing this target. Minimum is 100MB
     */
    bandwidthLimt?: string;
    /**
     * The name of the existing target bucket to replicate into
     */
    bucket: string;
    /**
     * Disable proxy for this target
     */
    disableProxy?: boolean;
    /**
     * Period where the health of this target will be checked. This must be a valid duration, such as `5s` or `2m`
     */
    healthCheckPeriod?: string;
    /**
     * The target host (pair IP/port or domain port). If port is omitted, HTTPS port (or HTTP if unsecure) will be used. This host must be reachable by the MinIO instance itself
     */
    host: string;
    /**
     * Path of the Minio endpoint. This is usefull if MinIO API isn't served on at the root, e.g for `example.com/minio/`, the path would be `/minio/`
     */
    path?: string;
    /**
     * Whether to use path-style or virtual-hosted-syle request to this target (https://docs.aws.amazon.com/AmazonS3/latest/userguide/VirtualHosting.html#path-style-access). `auto` allows MinIO to chose automatically the appropriate option (Recommened)`
     */
    pathStyle?: string;
    /**
     * Region of the target MinIO. This will be used to generate the target ARN
     */
    region?: string;
    /**
     * Secret key for the replication service account in the target MinIO. This is optional so it can be imported but prevent secret update
     */
    secretKey?: string;
    secure?: boolean;
    /**
     * The storage class to use for the object on this target
     */
    storageClass?: string;
    /**
     * Use synchronous replication.
     */
    syncronous?: boolean;
}

export interface S3BucketVersioningVersioningConfiguration {
    excludeFolders?: boolean;
    excludedPrefixes?: string[];
    status: string;
}

