// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.minio;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class S3BucketArgs extends com.pulumi.resources.ResourceArgs {

    public static final S3BucketArgs Empty = new S3BucketArgs();

    @Import(name="acl")
    private @Nullable Output<String> acl;

    public Optional<Output<String>> acl() {
        return Optional.ofNullable(this.acl);
    }

    @Import(name="bucket")
    private @Nullable Output<String> bucket;

    public Optional<Output<String>> bucket() {
        return Optional.ofNullable(this.bucket);
    }

    @Import(name="bucketPrefix")
    private @Nullable Output<String> bucketPrefix;

    public Optional<Output<String>> bucketPrefix() {
        return Optional.ofNullable(this.bucketPrefix);
    }

    @Import(name="forceDestroy")
    private @Nullable Output<Boolean> forceDestroy;

    public Optional<Output<Boolean>> forceDestroy() {
        return Optional.ofNullable(this.forceDestroy);
    }

    @Import(name="objectLocking")
    private @Nullable Output<Boolean> objectLocking;

    public Optional<Output<Boolean>> objectLocking() {
        return Optional.ofNullable(this.objectLocking);
    }

    @Import(name="quota")
    private @Nullable Output<Integer> quota;

    public Optional<Output<Integer>> quota() {
        return Optional.ofNullable(this.quota);
    }

    private S3BucketArgs() {}

    private S3BucketArgs(S3BucketArgs $) {
        this.acl = $.acl;
        this.bucket = $.bucket;
        this.bucketPrefix = $.bucketPrefix;
        this.forceDestroy = $.forceDestroy;
        this.objectLocking = $.objectLocking;
        this.quota = $.quota;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(S3BucketArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private S3BucketArgs $;

        public Builder() {
            $ = new S3BucketArgs();
        }

        public Builder(S3BucketArgs defaults) {
            $ = new S3BucketArgs(Objects.requireNonNull(defaults));
        }

        public Builder acl(@Nullable Output<String> acl) {
            $.acl = acl;
            return this;
        }

        public Builder acl(String acl) {
            return acl(Output.of(acl));
        }

        public Builder bucket(@Nullable Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        public Builder bucketPrefix(@Nullable Output<String> bucketPrefix) {
            $.bucketPrefix = bucketPrefix;
            return this;
        }

        public Builder bucketPrefix(String bucketPrefix) {
            return bucketPrefix(Output.of(bucketPrefix));
        }

        public Builder forceDestroy(@Nullable Output<Boolean> forceDestroy) {
            $.forceDestroy = forceDestroy;
            return this;
        }

        public Builder forceDestroy(Boolean forceDestroy) {
            return forceDestroy(Output.of(forceDestroy));
        }

        public Builder objectLocking(@Nullable Output<Boolean> objectLocking) {
            $.objectLocking = objectLocking;
            return this;
        }

        public Builder objectLocking(Boolean objectLocking) {
            return objectLocking(Output.of(objectLocking));
        }

        public Builder quota(@Nullable Output<Integer> quota) {
            $.quota = quota;
            return this;
        }

        public Builder quota(Integer quota) {
            return quota(Output.of(quota));
        }

        public S3BucketArgs build() {
            return $;
        }
    }

}
