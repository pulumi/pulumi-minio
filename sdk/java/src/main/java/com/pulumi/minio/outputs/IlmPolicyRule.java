// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.minio.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class IlmPolicyRule {
    private @Nullable String expiration;
    private @Nullable String filter;
    /**
     * @return The ID of this resource.
     * 
     */
    private String id;
    private @Nullable Integer noncurrentVersionExpirationDays;
    private @Nullable String status;
    private @Nullable Map<String,Object> tags;

    private IlmPolicyRule() {}
    public Optional<String> expiration() {
        return Optional.ofNullable(this.expiration);
    }
    public Optional<String> filter() {
        return Optional.ofNullable(this.filter);
    }
    /**
     * @return The ID of this resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<Integer> noncurrentVersionExpirationDays() {
        return Optional.ofNullable(this.noncurrentVersionExpirationDays);
    }
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    public Map<String,Object> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IlmPolicyRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String expiration;
        private @Nullable String filter;
        private String id;
        private @Nullable Integer noncurrentVersionExpirationDays;
        private @Nullable String status;
        private @Nullable Map<String,Object> tags;
        public Builder() {}
        public Builder(IlmPolicyRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.expiration = defaults.expiration;
    	      this.filter = defaults.filter;
    	      this.id = defaults.id;
    	      this.noncurrentVersionExpirationDays = defaults.noncurrentVersionExpirationDays;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder expiration(@Nullable String expiration) {
            this.expiration = expiration;
            return this;
        }
        @CustomType.Setter
        public Builder filter(@Nullable String filter) {
            this.filter = filter;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder noncurrentVersionExpirationDays(@Nullable Integer noncurrentVersionExpirationDays) {
            this.noncurrentVersionExpirationDays = noncurrentVersionExpirationDays;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,Object> tags) {
            this.tags = tags;
            return this;
        }
        public IlmPolicyRule build() {
            final var _resultValue = new IlmPolicyRule();
            _resultValue.expiration = expiration;
            _resultValue.filter = filter;
            _resultValue.id = id;
            _resultValue.noncurrentVersionExpirationDays = noncurrentVersionExpirationDays;
            _resultValue.status = status;
            _resultValue.tags = tags;
            return _resultValue;
        }
    }
}
