// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.minio.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class S3BucketVersioningVersioningConfiguration {
    private @Nullable Boolean excludeFolders;
    private @Nullable List<String> excludedPrefixes;
    /**
     * @return Versioning status, one of &#34;Enabled&#34;, &#34;Suspended&#34;.
     * 
     */
    private String status;

    private S3BucketVersioningVersioningConfiguration() {}
    public Optional<Boolean> excludeFolders() {
        return Optional.ofNullable(this.excludeFolders);
    }
    public List<String> excludedPrefixes() {
        return this.excludedPrefixes == null ? List.of() : this.excludedPrefixes;
    }
    /**
     * @return Versioning status, one of &#34;Enabled&#34;, &#34;Suspended&#34;.
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(S3BucketVersioningVersioningConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean excludeFolders;
        private @Nullable List<String> excludedPrefixes;
        private String status;
        public Builder() {}
        public Builder(S3BucketVersioningVersioningConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.excludeFolders = defaults.excludeFolders;
    	      this.excludedPrefixes = defaults.excludedPrefixes;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder excludeFolders(@Nullable Boolean excludeFolders) {
            this.excludeFolders = excludeFolders;
            return this;
        }
        @CustomType.Setter
        public Builder excludedPrefixes(@Nullable List<String> excludedPrefixes) {
            this.excludedPrefixes = excludedPrefixes;
            return this;
        }
        public Builder excludedPrefixes(String... excludedPrefixes) {
            return excludedPrefixes(List.of(excludedPrefixes));
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public S3BucketVersioningVersioningConfiguration build() {
            final var o = new S3BucketVersioningVersioningConfiguration();
            o.excludeFolders = excludeFolders;
            o.excludedPrefixes = excludedPrefixes;
            o.status = status;
            return o;
        }
    }
}
