// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.minio.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.minio.inputs.S3BucketReplicationRuleArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class S3BucketReplicationState extends com.pulumi.resources.ResourceArgs {

    public static final S3BucketReplicationState Empty = new S3BucketReplicationState();

    /**
     * The name of the existing target bucket to replicate into
     * 
     */
    @Import(name="bucket")
    private @Nullable Output<String> bucket;

    /**
     * @return The name of the existing target bucket to replicate into
     * 
     */
    public Optional<Output<String>> bucket() {
        return Optional.ofNullable(this.bucket);
    }

    /**
     * Rule definitions
     * 
     */
    @Import(name="rules")
    private @Nullable Output<List<S3BucketReplicationRuleArgs>> rules;

    /**
     * @return Rule definitions
     * 
     */
    public Optional<Output<List<S3BucketReplicationRuleArgs>>> rules() {
        return Optional.ofNullable(this.rules);
    }

    private S3BucketReplicationState() {}

    private S3BucketReplicationState(S3BucketReplicationState $) {
        this.bucket = $.bucket;
        this.rules = $.rules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(S3BucketReplicationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private S3BucketReplicationState $;

        public Builder() {
            $ = new S3BucketReplicationState();
        }

        public Builder(S3BucketReplicationState defaults) {
            $ = new S3BucketReplicationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucket The name of the existing target bucket to replicate into
         * 
         * @return builder
         * 
         */
        public Builder bucket(@Nullable Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        /**
         * @param bucket The name of the existing target bucket to replicate into
         * 
         * @return builder
         * 
         */
        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        /**
         * @param rules Rule definitions
         * 
         * @return builder
         * 
         */
        public Builder rules(@Nullable Output<List<S3BucketReplicationRuleArgs>> rules) {
            $.rules = rules;
            return this;
        }

        /**
         * @param rules Rule definitions
         * 
         * @return builder
         * 
         */
        public Builder rules(List<S3BucketReplicationRuleArgs> rules) {
            return rules(Output.of(rules));
        }

        /**
         * @param rules Rule definitions
         * 
         * @return builder
         * 
         */
        public Builder rules(S3BucketReplicationRuleArgs... rules) {
            return rules(List.of(rules));
        }

        public S3BucketReplicationState build() {
            return $;
        }
    }

}
