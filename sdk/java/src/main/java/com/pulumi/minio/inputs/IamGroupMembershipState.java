// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.minio.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IamGroupMembershipState extends com.pulumi.resources.ResourceArgs {

    public static final IamGroupMembershipState Empty = new IamGroupMembershipState();

    /**
     * Group name to add users
     * 
     */
    @Import(name="group")
    private @Nullable Output<String> group;

    /**
     * @return Group name to add users
     * 
     */
    public Optional<Output<String>> group() {
        return Optional.ofNullable(this.group);
    }

    /**
     * Name of group membership
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of group membership
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Add user or list of users such as a group membership
     * 
     */
    @Import(name="users")
    private @Nullable Output<List<String>> users;

    /**
     * @return Add user or list of users such as a group membership
     * 
     */
    public Optional<Output<List<String>>> users() {
        return Optional.ofNullable(this.users);
    }

    private IamGroupMembershipState() {}

    private IamGroupMembershipState(IamGroupMembershipState $) {
        this.group = $.group;
        this.name = $.name;
        this.users = $.users;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IamGroupMembershipState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IamGroupMembershipState $;

        public Builder() {
            $ = new IamGroupMembershipState();
        }

        public Builder(IamGroupMembershipState defaults) {
            $ = new IamGroupMembershipState(Objects.requireNonNull(defaults));
        }

        /**
         * @param group Group name to add users
         * 
         * @return builder
         * 
         */
        public Builder group(@Nullable Output<String> group) {
            $.group = group;
            return this;
        }

        /**
         * @param group Group name to add users
         * 
         * @return builder
         * 
         */
        public Builder group(String group) {
            return group(Output.of(group));
        }

        /**
         * @param name Name of group membership
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of group membership
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param users Add user or list of users such as a group membership
         * 
         * @return builder
         * 
         */
        public Builder users(@Nullable Output<List<String>> users) {
            $.users = users;
            return this;
        }

        /**
         * @param users Add user or list of users such as a group membership
         * 
         * @return builder
         * 
         */
        public Builder users(List<String> users) {
            return users(Output.of(users));
        }

        /**
         * @param users Add user or list of users such as a group membership
         * 
         * @return builder
         * 
         */
        public Builder users(String... users) {
            return users(List.of(users));
        }

        public IamGroupMembershipState build() {
            return $;
        }
    }

}
