// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.minio;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.minio.S3BucketPolicyArgs;
import com.pulumi.minio.Utilities;
import com.pulumi.minio.inputs.S3BucketPolicyState;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.minio.S3Bucket;
 * import com.pulumi.minio.S3BucketArgs;
 * import com.pulumi.minio.S3BucketPolicy;
 * import com.pulumi.minio.S3BucketPolicyArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var bucketS3Bucket = new S3Bucket(&#34;bucketS3Bucket&#34;, S3BucketArgs.builder()        
 *             .bucket(&#34;example-bucket&#34;)
 *             .build());
 * 
 *         var bucketS3BucketPolicy = new S3BucketPolicy(&#34;bucketS3BucketPolicy&#34;, S3BucketPolicyArgs.builder()        
 *             .bucket(bucketS3Bucket.bucket())
 *             .policy(bucketS3Bucket.bucket().applyValue(bucket -&gt; &#34;&#34;&#34;
 * {
 *   &#34;Version&#34;: &#34;2012-10-17&#34;,
 *   &#34;Statement&#34;: [
 *     {
 *       &#34;Effect&#34;: &#34;Allow&#34;,
 *      &#34;Principal&#34;: {&#34;AWS&#34;: [&#34;*&#34;]},
 *       &#34;Resource&#34;: [&#34;arn:aws:s3:::%s&#34;],
 *      &#34;Action&#34;: [&#34;s3:ListBucket&#34;]
 *     }
 *   ]
 * }
 * &#34;, bucket)))
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 */
@ResourceType(type="minio:index/s3BucketPolicy:S3BucketPolicy")
public class S3BucketPolicy extends com.pulumi.resources.CustomResource {
    @Export(name="bucket", type=String.class, parameters={})
    private Output<String> bucket;

    public Output<String> bucket() {
        return this.bucket;
    }
    @Export(name="policy", type=String.class, parameters={})
    private Output<String> policy;

    public Output<String> policy() {
        return this.policy;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public S3BucketPolicy(String name) {
        this(name, S3BucketPolicyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public S3BucketPolicy(String name, S3BucketPolicyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public S3BucketPolicy(String name, S3BucketPolicyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("minio:index/s3BucketPolicy:S3BucketPolicy", name, args == null ? S3BucketPolicyArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private S3BucketPolicy(String name, Output<String> id, @Nullable S3BucketPolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("minio:index/s3BucketPolicy:S3BucketPolicy", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static S3BucketPolicy get(String name, Output<String> id, @Nullable S3BucketPolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new S3BucketPolicy(name, id, state, options);
    }
}
