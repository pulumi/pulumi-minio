// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.minio;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.minio.inputs.S3BucketNotificationQueueArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class S3BucketNotificationArgs extends com.pulumi.resources.ResourceArgs {

    public static final S3BucketNotificationArgs Empty = new S3BucketNotificationArgs();

    @Import(name="bucket", required=true)
    private Output<String> bucket;

    public Output<String> bucket() {
        return this.bucket;
    }

    @Import(name="queues")
    private @Nullable Output<List<S3BucketNotificationQueueArgs>> queues;

    public Optional<Output<List<S3BucketNotificationQueueArgs>>> queues() {
        return Optional.ofNullable(this.queues);
    }

    private S3BucketNotificationArgs() {}

    private S3BucketNotificationArgs(S3BucketNotificationArgs $) {
        this.bucket = $.bucket;
        this.queues = $.queues;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(S3BucketNotificationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private S3BucketNotificationArgs $;

        public Builder() {
            $ = new S3BucketNotificationArgs();
        }

        public Builder(S3BucketNotificationArgs defaults) {
            $ = new S3BucketNotificationArgs(Objects.requireNonNull(defaults));
        }

        public Builder bucket(Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        public Builder queues(@Nullable Output<List<S3BucketNotificationQueueArgs>> queues) {
            $.queues = queues;
            return this;
        }

        public Builder queues(List<S3BucketNotificationQueueArgs> queues) {
            return queues(Output.of(queues));
        }

        public Builder queues(S3BucketNotificationQueueArgs... queues) {
            return queues(List.of(queues));
        }

        public S3BucketNotificationArgs build() {
            if ($.bucket == null) {
                throw new MissingRequiredPropertyException("S3BucketNotificationArgs", "bucket");
            }
            return $;
        }
    }

}
