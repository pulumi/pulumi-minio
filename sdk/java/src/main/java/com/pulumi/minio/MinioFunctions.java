// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.minio;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.minio.Utilities;
import com.pulumi.minio.inputs.GetIamPolicyDocumentArgs;
import com.pulumi.minio.inputs.GetIamPolicyDocumentPlainArgs;
import com.pulumi.minio.outputs.GetIamPolicyDocumentResult;
import java.util.concurrent.CompletableFuture;

public final class MinioFunctions {
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.minio.MinioFunctions;
     * import com.pulumi.minio.inputs.GetIamPolicyDocumentArgs;
     * import com.pulumi.minio.IamPolicy;
     * import com.pulumi.minio.IamPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = MinioFunctions.getIamPolicyDocument(GetIamPolicyDocumentArgs.builder()
     *             .statements(            
     *                 GetIamPolicyDocumentStatementArgs.builder()
     *                     .sid(&#34;1&#34;)
     *                     .actions(                    
     *                         &#34;s3:ListAllMyBuckets&#34;,
     *                         &#34;s3:GetBucketLocation&#34;)
     *                     .resources(&#34;arn:aws:s3:::*&#34;)
     *                     .build(),
     *                 GetIamPolicyDocumentStatementArgs.builder()
     *                     .actions(&#34;s3:ListBucket&#34;)
     *                     .resources(&#34;arn:aws:s3:::state-terraform-s3&#34;)
     *                     .conditions(GetIamPolicyDocumentStatementConditionArgs.builder()
     *                         .test(&#34;StringLike&#34;)
     *                         .variable(&#34;s3:prefix&#34;)
     *                         .values(                        
     *                             &#34;&#34;,
     *                             &#34;home/&#34;)
     *                         .build())
     *                     .build(),
     *                 GetIamPolicyDocumentStatementArgs.builder()
     *                     .actions(&#34;s3:PutObject&#34;)
     *                     .resources(                    
     *                         &#34;arn:aws:s3:::state-terraform-s3&#34;,
     *                         &#34;arn:aws:s3:::state-terraform-s3/*&#34;)
     *                     .build())
     *             .build());
     * 
     *         var testPolicy = new IamPolicy(&#34;testPolicy&#34;, IamPolicyArgs.builder()        
     *             .policy(example.applyValue(getIamPolicyDocumentResult -&gt; getIamPolicyDocumentResult.json()))
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetIamPolicyDocumentResult> getIamPolicyDocument() {
        return getIamPolicyDocument(GetIamPolicyDocumentArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.minio.MinioFunctions;
     * import com.pulumi.minio.inputs.GetIamPolicyDocumentArgs;
     * import com.pulumi.minio.IamPolicy;
     * import com.pulumi.minio.IamPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = MinioFunctions.getIamPolicyDocument(GetIamPolicyDocumentArgs.builder()
     *             .statements(            
     *                 GetIamPolicyDocumentStatementArgs.builder()
     *                     .sid(&#34;1&#34;)
     *                     .actions(                    
     *                         &#34;s3:ListAllMyBuckets&#34;,
     *                         &#34;s3:GetBucketLocation&#34;)
     *                     .resources(&#34;arn:aws:s3:::*&#34;)
     *                     .build(),
     *                 GetIamPolicyDocumentStatementArgs.builder()
     *                     .actions(&#34;s3:ListBucket&#34;)
     *                     .resources(&#34;arn:aws:s3:::state-terraform-s3&#34;)
     *                     .conditions(GetIamPolicyDocumentStatementConditionArgs.builder()
     *                         .test(&#34;StringLike&#34;)
     *                         .variable(&#34;s3:prefix&#34;)
     *                         .values(                        
     *                             &#34;&#34;,
     *                             &#34;home/&#34;)
     *                         .build())
     *                     .build(),
     *                 GetIamPolicyDocumentStatementArgs.builder()
     *                     .actions(&#34;s3:PutObject&#34;)
     *                     .resources(                    
     *                         &#34;arn:aws:s3:::state-terraform-s3&#34;,
     *                         &#34;arn:aws:s3:::state-terraform-s3/*&#34;)
     *                     .build())
     *             .build());
     * 
     *         var testPolicy = new IamPolicy(&#34;testPolicy&#34;, IamPolicyArgs.builder()        
     *             .policy(example.applyValue(getIamPolicyDocumentResult -&gt; getIamPolicyDocumentResult.json()))
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetIamPolicyDocumentResult> getIamPolicyDocumentPlain() {
        return getIamPolicyDocumentPlain(GetIamPolicyDocumentPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.minio.MinioFunctions;
     * import com.pulumi.minio.inputs.GetIamPolicyDocumentArgs;
     * import com.pulumi.minio.IamPolicy;
     * import com.pulumi.minio.IamPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = MinioFunctions.getIamPolicyDocument(GetIamPolicyDocumentArgs.builder()
     *             .statements(            
     *                 GetIamPolicyDocumentStatementArgs.builder()
     *                     .sid(&#34;1&#34;)
     *                     .actions(                    
     *                         &#34;s3:ListAllMyBuckets&#34;,
     *                         &#34;s3:GetBucketLocation&#34;)
     *                     .resources(&#34;arn:aws:s3:::*&#34;)
     *                     .build(),
     *                 GetIamPolicyDocumentStatementArgs.builder()
     *                     .actions(&#34;s3:ListBucket&#34;)
     *                     .resources(&#34;arn:aws:s3:::state-terraform-s3&#34;)
     *                     .conditions(GetIamPolicyDocumentStatementConditionArgs.builder()
     *                         .test(&#34;StringLike&#34;)
     *                         .variable(&#34;s3:prefix&#34;)
     *                         .values(                        
     *                             &#34;&#34;,
     *                             &#34;home/&#34;)
     *                         .build())
     *                     .build(),
     *                 GetIamPolicyDocumentStatementArgs.builder()
     *                     .actions(&#34;s3:PutObject&#34;)
     *                     .resources(                    
     *                         &#34;arn:aws:s3:::state-terraform-s3&#34;,
     *                         &#34;arn:aws:s3:::state-terraform-s3/*&#34;)
     *                     .build())
     *             .build());
     * 
     *         var testPolicy = new IamPolicy(&#34;testPolicy&#34;, IamPolicyArgs.builder()        
     *             .policy(example.applyValue(getIamPolicyDocumentResult -&gt; getIamPolicyDocumentResult.json()))
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetIamPolicyDocumentResult> getIamPolicyDocument(GetIamPolicyDocumentArgs args) {
        return getIamPolicyDocument(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.minio.MinioFunctions;
     * import com.pulumi.minio.inputs.GetIamPolicyDocumentArgs;
     * import com.pulumi.minio.IamPolicy;
     * import com.pulumi.minio.IamPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = MinioFunctions.getIamPolicyDocument(GetIamPolicyDocumentArgs.builder()
     *             .statements(            
     *                 GetIamPolicyDocumentStatementArgs.builder()
     *                     .sid(&#34;1&#34;)
     *                     .actions(                    
     *                         &#34;s3:ListAllMyBuckets&#34;,
     *                         &#34;s3:GetBucketLocation&#34;)
     *                     .resources(&#34;arn:aws:s3:::*&#34;)
     *                     .build(),
     *                 GetIamPolicyDocumentStatementArgs.builder()
     *                     .actions(&#34;s3:ListBucket&#34;)
     *                     .resources(&#34;arn:aws:s3:::state-terraform-s3&#34;)
     *                     .conditions(GetIamPolicyDocumentStatementConditionArgs.builder()
     *                         .test(&#34;StringLike&#34;)
     *                         .variable(&#34;s3:prefix&#34;)
     *                         .values(                        
     *                             &#34;&#34;,
     *                             &#34;home/&#34;)
     *                         .build())
     *                     .build(),
     *                 GetIamPolicyDocumentStatementArgs.builder()
     *                     .actions(&#34;s3:PutObject&#34;)
     *                     .resources(                    
     *                         &#34;arn:aws:s3:::state-terraform-s3&#34;,
     *                         &#34;arn:aws:s3:::state-terraform-s3/*&#34;)
     *                     .build())
     *             .build());
     * 
     *         var testPolicy = new IamPolicy(&#34;testPolicy&#34;, IamPolicyArgs.builder()        
     *             .policy(example.applyValue(getIamPolicyDocumentResult -&gt; getIamPolicyDocumentResult.json()))
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetIamPolicyDocumentResult> getIamPolicyDocumentPlain(GetIamPolicyDocumentPlainArgs args) {
        return getIamPolicyDocumentPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.minio.MinioFunctions;
     * import com.pulumi.minio.inputs.GetIamPolicyDocumentArgs;
     * import com.pulumi.minio.IamPolicy;
     * import com.pulumi.minio.IamPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = MinioFunctions.getIamPolicyDocument(GetIamPolicyDocumentArgs.builder()
     *             .statements(            
     *                 GetIamPolicyDocumentStatementArgs.builder()
     *                     .sid(&#34;1&#34;)
     *                     .actions(                    
     *                         &#34;s3:ListAllMyBuckets&#34;,
     *                         &#34;s3:GetBucketLocation&#34;)
     *                     .resources(&#34;arn:aws:s3:::*&#34;)
     *                     .build(),
     *                 GetIamPolicyDocumentStatementArgs.builder()
     *                     .actions(&#34;s3:ListBucket&#34;)
     *                     .resources(&#34;arn:aws:s3:::state-terraform-s3&#34;)
     *                     .conditions(GetIamPolicyDocumentStatementConditionArgs.builder()
     *                         .test(&#34;StringLike&#34;)
     *                         .variable(&#34;s3:prefix&#34;)
     *                         .values(                        
     *                             &#34;&#34;,
     *                             &#34;home/&#34;)
     *                         .build())
     *                     .build(),
     *                 GetIamPolicyDocumentStatementArgs.builder()
     *                     .actions(&#34;s3:PutObject&#34;)
     *                     .resources(                    
     *                         &#34;arn:aws:s3:::state-terraform-s3&#34;,
     *                         &#34;arn:aws:s3:::state-terraform-s3/*&#34;)
     *                     .build())
     *             .build());
     * 
     *         var testPolicy = new IamPolicy(&#34;testPolicy&#34;, IamPolicyArgs.builder()        
     *             .policy(example.applyValue(getIamPolicyDocumentResult -&gt; getIamPolicyDocumentResult.json()))
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetIamPolicyDocumentResult> getIamPolicyDocument(GetIamPolicyDocumentArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("minio:index/getIamPolicyDocument:getIamPolicyDocument", TypeShape.of(GetIamPolicyDocumentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.minio.MinioFunctions;
     * import com.pulumi.minio.inputs.GetIamPolicyDocumentArgs;
     * import com.pulumi.minio.IamPolicy;
     * import com.pulumi.minio.IamPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = MinioFunctions.getIamPolicyDocument(GetIamPolicyDocumentArgs.builder()
     *             .statements(            
     *                 GetIamPolicyDocumentStatementArgs.builder()
     *                     .sid(&#34;1&#34;)
     *                     .actions(                    
     *                         &#34;s3:ListAllMyBuckets&#34;,
     *                         &#34;s3:GetBucketLocation&#34;)
     *                     .resources(&#34;arn:aws:s3:::*&#34;)
     *                     .build(),
     *                 GetIamPolicyDocumentStatementArgs.builder()
     *                     .actions(&#34;s3:ListBucket&#34;)
     *                     .resources(&#34;arn:aws:s3:::state-terraform-s3&#34;)
     *                     .conditions(GetIamPolicyDocumentStatementConditionArgs.builder()
     *                         .test(&#34;StringLike&#34;)
     *                         .variable(&#34;s3:prefix&#34;)
     *                         .values(                        
     *                             &#34;&#34;,
     *                             &#34;home/&#34;)
     *                         .build())
     *                     .build(),
     *                 GetIamPolicyDocumentStatementArgs.builder()
     *                     .actions(&#34;s3:PutObject&#34;)
     *                     .resources(                    
     *                         &#34;arn:aws:s3:::state-terraform-s3&#34;,
     *                         &#34;arn:aws:s3:::state-terraform-s3/*&#34;)
     *                     .build())
     *             .build());
     * 
     *         var testPolicy = new IamPolicy(&#34;testPolicy&#34;, IamPolicyArgs.builder()        
     *             .policy(example.applyValue(getIamPolicyDocumentResult -&gt; getIamPolicyDocumentResult.json()))
     *             .build());
     * 
     *     }
     * }
     * ```
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetIamPolicyDocumentResult> getIamPolicyDocumentPlain(GetIamPolicyDocumentPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("minio:index/getIamPolicyDocument:getIamPolicyDocument", TypeShape.of(GetIamPolicyDocumentResult.class), args, Utilities.withVersion(options));
    }
}
