// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.minio;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IamUserArgs extends com.pulumi.resources.ResourceArgs {

    public static final IamUserArgs Empty = new IamUserArgs();

    /**
     * Disable user
     * 
     */
    @Import(name="disableUser")
    private @Nullable Output<Boolean> disableUser;

    /**
     * @return Disable user
     * 
     */
    public Optional<Output<Boolean>> disableUser() {
        return Optional.ofNullable(this.disableUser);
    }

    @Import(name="forceDestroy")
    private @Nullable Output<Boolean> forceDestroy;

    public Optional<Output<Boolean>> forceDestroy() {
        return Optional.ofNullable(this.forceDestroy);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="secret")
    private @Nullable Output<String> secret;

    public Optional<Output<String>> secret() {
        return Optional.ofNullable(this.secret);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Rotate Minio User Secret Key
     * 
     */
    @Import(name="updateSecret")
    private @Nullable Output<Boolean> updateSecret;

    /**
     * @return Rotate Minio User Secret Key
     * 
     */
    public Optional<Output<Boolean>> updateSecret() {
        return Optional.ofNullable(this.updateSecret);
    }

    private IamUserArgs() {}

    private IamUserArgs(IamUserArgs $) {
        this.disableUser = $.disableUser;
        this.forceDestroy = $.forceDestroy;
        this.name = $.name;
        this.secret = $.secret;
        this.tags = $.tags;
        this.updateSecret = $.updateSecret;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IamUserArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IamUserArgs $;

        public Builder() {
            $ = new IamUserArgs();
        }

        public Builder(IamUserArgs defaults) {
            $ = new IamUserArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param disableUser Disable user
         * 
         * @return builder
         * 
         */
        public Builder disableUser(@Nullable Output<Boolean> disableUser) {
            $.disableUser = disableUser;
            return this;
        }

        /**
         * @param disableUser Disable user
         * 
         * @return builder
         * 
         */
        public Builder disableUser(Boolean disableUser) {
            return disableUser(Output.of(disableUser));
        }

        public Builder forceDestroy(@Nullable Output<Boolean> forceDestroy) {
            $.forceDestroy = forceDestroy;
            return this;
        }

        public Builder forceDestroy(Boolean forceDestroy) {
            return forceDestroy(Output.of(forceDestroy));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder secret(@Nullable Output<String> secret) {
            $.secret = secret;
            return this;
        }

        public Builder secret(String secret) {
            return secret(Output.of(secret));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param updateSecret Rotate Minio User Secret Key
         * 
         * @return builder
         * 
         */
        public Builder updateSecret(@Nullable Output<Boolean> updateSecret) {
            $.updateSecret = updateSecret;
            return this;
        }

        /**
         * @param updateSecret Rotate Minio User Secret Key
         * 
         * @return builder
         * 
         */
        public Builder updateSecret(Boolean updateSecret) {
            return updateSecret(Output.of(updateSecret));
        }

        public IamUserArgs build() {
            return $;
        }
    }

}
