// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.minio.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.minio.inputs.GetIamPolicyDocumentStatementArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetIamPolicyDocumentArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetIamPolicyDocumentArgs Empty = new GetIamPolicyDocumentArgs();

    @Import(name="overrideJson")
    private @Nullable Output<String> overrideJson;

    public Optional<Output<String>> overrideJson() {
        return Optional.ofNullable(this.overrideJson);
    }

    @Import(name="policyId")
    private @Nullable Output<String> policyId;

    public Optional<Output<String>> policyId() {
        return Optional.ofNullable(this.policyId);
    }

    @Import(name="sourceJson")
    private @Nullable Output<String> sourceJson;

    public Optional<Output<String>> sourceJson() {
        return Optional.ofNullable(this.sourceJson);
    }

    @Import(name="statements")
    private @Nullable Output<List<GetIamPolicyDocumentStatementArgs>> statements;

    public Optional<Output<List<GetIamPolicyDocumentStatementArgs>>> statements() {
        return Optional.ofNullable(this.statements);
    }

    @Import(name="version")
    private @Nullable Output<String> version;

    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private GetIamPolicyDocumentArgs() {}

    private GetIamPolicyDocumentArgs(GetIamPolicyDocumentArgs $) {
        this.overrideJson = $.overrideJson;
        this.policyId = $.policyId;
        this.sourceJson = $.sourceJson;
        this.statements = $.statements;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetIamPolicyDocumentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetIamPolicyDocumentArgs $;

        public Builder() {
            $ = new GetIamPolicyDocumentArgs();
        }

        public Builder(GetIamPolicyDocumentArgs defaults) {
            $ = new GetIamPolicyDocumentArgs(Objects.requireNonNull(defaults));
        }

        public Builder overrideJson(@Nullable Output<String> overrideJson) {
            $.overrideJson = overrideJson;
            return this;
        }

        public Builder overrideJson(String overrideJson) {
            return overrideJson(Output.of(overrideJson));
        }

        public Builder policyId(@Nullable Output<String> policyId) {
            $.policyId = policyId;
            return this;
        }

        public Builder policyId(String policyId) {
            return policyId(Output.of(policyId));
        }

        public Builder sourceJson(@Nullable Output<String> sourceJson) {
            $.sourceJson = sourceJson;
            return this;
        }

        public Builder sourceJson(String sourceJson) {
            return sourceJson(Output.of(sourceJson));
        }

        public Builder statements(@Nullable Output<List<GetIamPolicyDocumentStatementArgs>> statements) {
            $.statements = statements;
            return this;
        }

        public Builder statements(List<GetIamPolicyDocumentStatementArgs> statements) {
            return statements(Output.of(statements));
        }

        public Builder statements(GetIamPolicyDocumentStatementArgs... statements) {
            return statements(List.of(statements));
        }

        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        public Builder version(String version) {
            return version(Output.of(version));
        }

        public GetIamPolicyDocumentArgs build() {
            return $;
        }
    }

}
