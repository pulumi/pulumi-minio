// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Minio
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Minio = Pulumi.Minio;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var bucketS3Bucket = new Minio.S3Bucket("bucketS3Bucket", new()
    ///     {
    ///         Bucket = "example-bucket",
    ///     });
    /// 
    ///     var bucketS3BucketVersioning = new Minio.S3BucketVersioning("bucketS3BucketVersioning", new()
    ///     {
    ///         Bucket = bucketS3Bucket.Bucket,
    ///         VersioningConfiguration = new Minio.Inputs.S3BucketVersioningVersioningConfigurationArgs
    ///         {
    ///             Status = "Enabled",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [MinioResourceType("minio:index/s3BucketVersioning:S3BucketVersioning")]
    public partial class S3BucketVersioning : global::Pulumi.CustomResource
    {
        [Output("bucket")]
        public Output<string> Bucket { get; private set; } = null!;

        [Output("versioningConfiguration")]
        public Output<Outputs.S3BucketVersioningVersioningConfiguration> VersioningConfiguration { get; private set; } = null!;


        /// <summary>
        /// Create a S3BucketVersioning resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public S3BucketVersioning(string name, S3BucketVersioningArgs args, CustomResourceOptions? options = null)
            : base("minio:index/s3BucketVersioning:S3BucketVersioning", name, args ?? new S3BucketVersioningArgs(), MakeResourceOptions(options, ""))
        {
        }

        private S3BucketVersioning(string name, Input<string> id, S3BucketVersioningState? state = null, CustomResourceOptions? options = null)
            : base("minio:index/s3BucketVersioning:S3BucketVersioning", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing S3BucketVersioning resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static S3BucketVersioning Get(string name, Input<string> id, S3BucketVersioningState? state = null, CustomResourceOptions? options = null)
        {
            return new S3BucketVersioning(name, id, state, options);
        }
    }

    public sealed class S3BucketVersioningArgs : global::Pulumi.ResourceArgs
    {
        [Input("bucket", required: true)]
        public Input<string> Bucket { get; set; } = null!;

        [Input("versioningConfiguration", required: true)]
        public Input<Inputs.S3BucketVersioningVersioningConfigurationArgs> VersioningConfiguration { get; set; } = null!;

        public S3BucketVersioningArgs()
        {
        }
        public static new S3BucketVersioningArgs Empty => new S3BucketVersioningArgs();
    }

    public sealed class S3BucketVersioningState : global::Pulumi.ResourceArgs
    {
        [Input("bucket")]
        public Input<string>? Bucket { get; set; }

        [Input("versioningConfiguration")]
        public Input<Inputs.S3BucketVersioningVersioningConfigurationGetArgs>? VersioningConfiguration { get; set; }

        public S3BucketVersioningState()
        {
        }
        public static new S3BucketVersioningState Empty => new S3BucketVersioningState();
    }
}
