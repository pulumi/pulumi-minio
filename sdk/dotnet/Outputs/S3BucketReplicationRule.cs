// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Minio.Outputs
{

    [OutputType]
    public sealed class S3BucketReplicationRule
    {
        /// <summary>
        /// Rule ARN genrated by MinIO
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// Whether or not to synchronise marker deletion
        /// </summary>
        public readonly bool? DeleteMarkerReplication;
        /// <summary>
        /// Whether or not to propagate deletion
        /// </summary>
        public readonly bool? DeleteReplication;
        /// <summary>
        /// Whether or not this rule is enabled
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// Whether or not to synchronise object created prior the replication configuration
        /// </summary>
        public readonly bool? ExistingObjectReplication;
        /// <summary>
        /// Rule ID generated by MinIO
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Whether or not to synchonise buckets and objects metadata (such as locks). This must be enabled to achieve a two-way replication
        /// </summary>
        public readonly bool? MetadataSync;
        /// <summary>
        /// Bucket prefix object must be in to be syncronised
        /// </summary>
        public readonly string? Prefix;
        /// <summary>
        /// Rule priority. If omitted, the inverted index will be used as priority. This means that the first rule definition will have the higher priority
        /// </summary>
        public readonly int? Priority;
        /// <summary>
        /// Tags which objects must have to be syncronised
        /// </summary>
        public readonly ImmutableDictionary<string, object>? Tags;
        /// <summary>
        /// Bucket prefix
        /// </summary>
        public readonly Outputs.S3BucketReplicationRuleTarget Target;

        [OutputConstructor]
        private S3BucketReplicationRule(
            string? arn,

            bool? deleteMarkerReplication,

            bool? deleteReplication,

            bool? enabled,

            bool? existingObjectReplication,

            string? id,

            bool? metadataSync,

            string? prefix,

            int? priority,

            ImmutableDictionary<string, object>? tags,

            Outputs.S3BucketReplicationRuleTarget target)
        {
            Arn = arn;
            DeleteMarkerReplication = deleteMarkerReplication;
            DeleteReplication = deleteReplication;
            Enabled = enabled;
            ExistingObjectReplication = existingObjectReplication;
            Id = id;
            MetadataSync = metadataSync;
            Prefix = prefix;
            Priority = priority;
            Tags = tags;
            Target = target;
        }
    }
}
