// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Minio
{
    [MinioResourceType("minio:index/s3BucketServerSideEncryption:S3BucketServerSideEncryption")]
    public partial class S3BucketServerSideEncryption : global::Pulumi.CustomResource
    {
        [Output("bucket")]
        public Output<string> Bucket { get; private set; } = null!;

        [Output("encryptionType")]
        public Output<string> EncryptionType { get; private set; } = null!;

        [Output("kmsKeyId")]
        public Output<string> KmsKeyId { get; private set; } = null!;


        /// <summary>
        /// Create a S3BucketServerSideEncryption resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public S3BucketServerSideEncryption(string name, S3BucketServerSideEncryptionArgs args, CustomResourceOptions? options = null)
            : base("minio:index/s3BucketServerSideEncryption:S3BucketServerSideEncryption", name, args ?? new S3BucketServerSideEncryptionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private S3BucketServerSideEncryption(string name, Input<string> id, S3BucketServerSideEncryptionState? state = null, CustomResourceOptions? options = null)
            : base("minio:index/s3BucketServerSideEncryption:S3BucketServerSideEncryption", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing S3BucketServerSideEncryption resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static S3BucketServerSideEncryption Get(string name, Input<string> id, S3BucketServerSideEncryptionState? state = null, CustomResourceOptions? options = null)
        {
            return new S3BucketServerSideEncryption(name, id, state, options);
        }
    }

    public sealed class S3BucketServerSideEncryptionArgs : global::Pulumi.ResourceArgs
    {
        [Input("bucket", required: true)]
        public Input<string> Bucket { get; set; } = null!;

        [Input("encryptionType", required: true)]
        public Input<string> EncryptionType { get; set; } = null!;

        [Input("kmsKeyId", required: true)]
        public Input<string> KmsKeyId { get; set; } = null!;

        public S3BucketServerSideEncryptionArgs()
        {
        }
        public static new S3BucketServerSideEncryptionArgs Empty => new S3BucketServerSideEncryptionArgs();
    }

    public sealed class S3BucketServerSideEncryptionState : global::Pulumi.ResourceArgs
    {
        [Input("bucket")]
        public Input<string>? Bucket { get; set; }

        [Input("encryptionType")]
        public Input<string>? EncryptionType { get; set; }

        [Input("kmsKeyId")]
        public Input<string>? KmsKeyId { get; set; }

        public S3BucketServerSideEncryptionState()
        {
        }
        public static new S3BucketServerSideEncryptionState Empty => new S3BucketServerSideEncryptionState();
    }
}
