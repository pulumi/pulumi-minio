// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Minio
{
    public static class GetIamPolicyDocument
    {
        public static Task<GetIamPolicyDocumentResult> InvokeAsync(GetIamPolicyDocumentArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetIamPolicyDocumentResult>("minio:index/getIamPolicyDocument:getIamPolicyDocument", args ?? new GetIamPolicyDocumentArgs(), options.WithVersion());
    }


    public sealed class GetIamPolicyDocumentArgs : Pulumi.InvokeArgs
    {
        [Input("overrideJson")]
        public string? OverrideJson { get; set; }

        [Input("policyId")]
        public string? PolicyId { get; set; }

        [Input("sourceJson")]
        public string? SourceJson { get; set; }

        [Input("statements")]
        private List<Inputs.GetIamPolicyDocumentStatementArgs>? _statements;
        public List<Inputs.GetIamPolicyDocumentStatementArgs> Statements
        {
            get => _statements ?? (_statements = new List<Inputs.GetIamPolicyDocumentStatementArgs>());
            set => _statements = value;
        }

        [Input("version")]
        public string? Version { get; set; }

        public GetIamPolicyDocumentArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetIamPolicyDocumentResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Json;
        public readonly string? OverrideJson;
        public readonly string? PolicyId;
        public readonly string? SourceJson;
        public readonly ImmutableArray<Outputs.GetIamPolicyDocumentStatementResult> Statements;
        public readonly string? Version;

        [OutputConstructor]
        private GetIamPolicyDocumentResult(
            string id,

            string json,

            string? overrideJson,

            string? policyId,

            string? sourceJson,

            ImmutableArray<Outputs.GetIamPolicyDocumentStatementResult> statements,

            string? version)
        {
            Id = id;
            Json = json;
            OverrideJson = overrideJson;
            PolicyId = policyId;
            SourceJson = sourceJson;
            Statements = statements;
            Version = version;
        }
    }
}
