// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Minio.Inputs
{

    public sealed class S3BucketReplicationRuleTargetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Access key for the replication service account in the target MinIO
        /// </summary>
        [Input("accessKey", required: true)]
        public Input<string> AccessKey { get; set; } = null!;

        /// <summary>
        /// Maximum bandwidth in byte per second that MinIO can used when syncronysing this target. Minimum is 100MB
        /// </summary>
        [Input("bandwidthLimt")]
        public Input<string>? BandwidthLimt { get; set; }

        /// <summary>
        /// The name of the existing target bucket to replicate into
        /// </summary>
        [Input("bucket", required: true)]
        public Input<string> Bucket { get; set; } = null!;

        /// <summary>
        /// Disable proxy for this target
        /// </summary>
        [Input("disableProxy")]
        public Input<bool>? DisableProxy { get; set; }

        /// <summary>
        /// Period where the health of this target will be checked. This must be a valid duration, such as `5s` or `2m`
        /// </summary>
        [Input("healthCheckPeriod")]
        public Input<string>? HealthCheckPeriod { get; set; }

        /// <summary>
        /// The target host (pair IP/port or domain port). If port is omitted, HTTPS port (or HTTP if unsecure) will be used. This host must be reachable by the MinIO instance itself
        /// </summary>
        [Input("host", required: true)]
        public Input<string> Host { get; set; } = null!;

        /// <summary>
        /// Path of the Minio endpoint. This is usefull if MinIO API isn't served on at the root, e.g for `example.com/minio/`, the path would be `/minio/`
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        /// <summary>
        /// Whether to use path-style or virtual-hosted-syle request to this target (https://docs.aws.amazon.com/AmazonS3/latest/userguide/VirtualHosting.html#path-style-access). `auto` allows MinIO to chose automatically the appropriate option (Recommened)`
        /// </summary>
        [Input("pathStyle")]
        public Input<string>? PathStyle { get; set; }

        /// <summary>
        /// Region of the target MinIO. This will be used to generate the target ARN
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("secretKey")]
        private Input<string>? _secretKey;

        /// <summary>
        /// Secret key for the replication service account in the target MinIO. This is optional so it can be imported but prevent secret update
        /// </summary>
        public Input<string>? SecretKey
        {
            get => _secretKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _secretKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("secure")]
        public Input<bool>? Secure { get; set; }

        /// <summary>
        /// The storage class to use for the object on this target
        /// </summary>
        [Input("storageClass")]
        public Input<string>? StorageClass { get; set; }

        /// <summary>
        /// Use synchronous replication.
        /// </summary>
        [Input("syncronous")]
        public Input<bool>? Syncronous { get; set; }

        public S3BucketReplicationRuleTargetArgs()
        {
        }
        public static new S3BucketReplicationRuleTargetArgs Empty => new S3BucketReplicationRuleTargetArgs();
    }
}
