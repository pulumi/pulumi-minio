// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package minio

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The provider type for the minio package. By default, resources use package-wide configuration
// settings, however an explicit `Provider` instance may be created and passed during resource
// construction to achieve fine-grained programmatic control over provider settings. See the
// [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
type Provider struct {
	pulumi.ProviderResourceState

	// Minio Access Key
	//
	// Deprecated: use minio_user instead
	MinioAccessKey pulumi.StringPtrOutput `pulumi:"minioAccessKey"`
	// Minio API Version (type: string, options: v2 or v4, default: v4)
	MinioApiVersion pulumi.StringPtrOutput `pulumi:"minioApiVersion"`
	MinioCacertFile pulumi.StringPtrOutput `pulumi:"minioCacertFile"`
	MinioCertFile   pulumi.StringPtrOutput `pulumi:"minioCertFile"`
	MinioKeyFile    pulumi.StringPtrOutput `pulumi:"minioKeyFile"`
	// Minio Password
	MinioPassword pulumi.StringPtrOutput `pulumi:"minioPassword"`
	// Minio Region (default: us-east-1)
	MinioRegion pulumi.StringPtrOutput `pulumi:"minioRegion"`
	// Minio Secret Key
	//
	// Deprecated: use minio_password instead
	MinioSecretKey pulumi.StringPtrOutput `pulumi:"minioSecretKey"`
	// Minio Host and Port
	MinioServer pulumi.StringOutput `pulumi:"minioServer"`
	// Minio Session Token
	MinioSessionToken pulumi.StringPtrOutput `pulumi:"minioSessionToken"`
	// Minio User
	MinioUser pulumi.StringPtrOutput `pulumi:"minioUser"`
}

// NewProvider registers a new resource with the given unique name, arguments, and options.
func NewProvider(ctx *pulumi.Context,
	name string, args *ProviderArgs, opts ...pulumi.ResourceOption) (*Provider, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.MinioServer == nil {
		return nil, errors.New("invalid value for required argument 'MinioServer'")
	}
	var resource Provider
	err := ctx.RegisterResource("pulumi:providers:minio", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

type providerArgs struct {
	// Minio Access Key
	//
	// Deprecated: use minio_user instead
	MinioAccessKey *string `pulumi:"minioAccessKey"`
	// Minio API Version (type: string, options: v2 or v4, default: v4)
	MinioApiVersion *string `pulumi:"minioApiVersion"`
	MinioCacertFile *string `pulumi:"minioCacertFile"`
	MinioCertFile   *string `pulumi:"minioCertFile"`
	// Disable SSL certificate verification (default: false)
	MinioInsecure *bool   `pulumi:"minioInsecure"`
	MinioKeyFile  *string `pulumi:"minioKeyFile"`
	// Minio Password
	MinioPassword *string `pulumi:"minioPassword"`
	// Minio Region (default: us-east-1)
	MinioRegion *string `pulumi:"minioRegion"`
	// Minio Secret Key
	//
	// Deprecated: use minio_password instead
	MinioSecretKey *string `pulumi:"minioSecretKey"`
	// Minio Host and Port
	MinioServer string `pulumi:"minioServer"`
	// Minio Session Token
	MinioSessionToken *string `pulumi:"minioSessionToken"`
	// Minio SSL enabled (default: false)
	MinioSsl *bool `pulumi:"minioSsl"`
	// Minio User
	MinioUser *string `pulumi:"minioUser"`
}

// The set of arguments for constructing a Provider resource.
type ProviderArgs struct {
	// Minio Access Key
	//
	// Deprecated: use minio_user instead
	MinioAccessKey pulumi.StringPtrInput
	// Minio API Version (type: string, options: v2 or v4, default: v4)
	MinioApiVersion pulumi.StringPtrInput
	MinioCacertFile pulumi.StringPtrInput
	MinioCertFile   pulumi.StringPtrInput
	// Disable SSL certificate verification (default: false)
	MinioInsecure pulumi.BoolPtrInput
	MinioKeyFile  pulumi.StringPtrInput
	// Minio Password
	MinioPassword pulumi.StringPtrInput
	// Minio Region (default: us-east-1)
	MinioRegion pulumi.StringPtrInput
	// Minio Secret Key
	//
	// Deprecated: use minio_password instead
	MinioSecretKey pulumi.StringPtrInput
	// Minio Host and Port
	MinioServer pulumi.StringInput
	// Minio Session Token
	MinioSessionToken pulumi.StringPtrInput
	// Minio SSL enabled (default: false)
	MinioSsl pulumi.BoolPtrInput
	// Minio User
	MinioUser pulumi.StringPtrInput
}

func (ProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*providerArgs)(nil)).Elem()
}

type ProviderInput interface {
	pulumi.Input

	ToProviderOutput() ProviderOutput
	ToProviderOutputWithContext(ctx context.Context) ProviderOutput
}

func (*Provider) ElementType() reflect.Type {
	return reflect.TypeOf((**Provider)(nil)).Elem()
}

func (i *Provider) ToProviderOutput() ProviderOutput {
	return i.ToProviderOutputWithContext(context.Background())
}

func (i *Provider) ToProviderOutputWithContext(ctx context.Context) ProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderOutput)
}

type ProviderOutput struct{ *pulumi.OutputState }

func (ProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Provider)(nil)).Elem()
}

func (o ProviderOutput) ToProviderOutput() ProviderOutput {
	return o
}

func (o ProviderOutput) ToProviderOutputWithContext(ctx context.Context) ProviderOutput {
	return o
}

// Minio Access Key
//
// Deprecated: use minio_user instead
func (o ProviderOutput) MinioAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.MinioAccessKey }).(pulumi.StringPtrOutput)
}

// Minio API Version (type: string, options: v2 or v4, default: v4)
func (o ProviderOutput) MinioApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.MinioApiVersion }).(pulumi.StringPtrOutput)
}

func (o ProviderOutput) MinioCacertFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.MinioCacertFile }).(pulumi.StringPtrOutput)
}

func (o ProviderOutput) MinioCertFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.MinioCertFile }).(pulumi.StringPtrOutput)
}

func (o ProviderOutput) MinioKeyFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.MinioKeyFile }).(pulumi.StringPtrOutput)
}

// Minio Password
func (o ProviderOutput) MinioPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.MinioPassword }).(pulumi.StringPtrOutput)
}

// Minio Region (default: us-east-1)
func (o ProviderOutput) MinioRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.MinioRegion }).(pulumi.StringPtrOutput)
}

// Minio Secret Key
//
// Deprecated: use minio_password instead
func (o ProviderOutput) MinioSecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.MinioSecretKey }).(pulumi.StringPtrOutput)
}

// Minio Host and Port
func (o ProviderOutput) MinioServer() pulumi.StringOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringOutput { return v.MinioServer }).(pulumi.StringOutput)
}

// Minio Session Token
func (o ProviderOutput) MinioSessionToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.MinioSessionToken }).(pulumi.StringPtrOutput)
}

// Minio User
func (o ProviderOutput) MinioUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.MinioUser }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderInput)(nil)).Elem(), &Provider{})
	pulumi.RegisterOutputType(ProviderOutput{})
}
