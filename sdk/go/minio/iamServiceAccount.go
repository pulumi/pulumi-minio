// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package minio

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-minio/sdk/go/minio/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-minio/sdk/go/minio"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			test, err := minio.NewIamUser(ctx, "test", &minio.IamUserArgs{
//				ForceDestroy: pulumi.Bool(true),
//				Tags: pulumi.Map{
//					"tag-key": pulumi.Any("tag-value"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			testServiceAccount, err := minio.NewIamServiceAccount(ctx, "testServiceAccount", &minio.IamServiceAccountArgs{
//				TargetUser: test.Name,
//			})
//			if err != nil {
//				return err
//			}
//			ctx.Export("minioUser", testServiceAccount.AccessKey)
//			ctx.Export("minioPassword", testServiceAccount.SecretKey)
//			return nil
//		})
//	}
//
// ```
type IamServiceAccount struct {
	pulumi.CustomResourceState

	AccessKey pulumi.StringOutput `pulumi:"accessKey"`
	// Disable service account
	DisableUser pulumi.BoolPtrOutput `pulumi:"disableUser"`
	// policy of service account
	Policy     pulumi.StringPtrOutput `pulumi:"policy"`
	SecretKey  pulumi.StringOutput    `pulumi:"secretKey"`
	Status     pulumi.StringOutput    `pulumi:"status"`
	TargetUser pulumi.StringOutput    `pulumi:"targetUser"`
	// rotate secret key
	UpdateSecret pulumi.BoolPtrOutput `pulumi:"updateSecret"`
}

// NewIamServiceAccount registers a new resource with the given unique name, arguments, and options.
func NewIamServiceAccount(ctx *pulumi.Context,
	name string, args *IamServiceAccountArgs, opts ...pulumi.ResourceOption) (*IamServiceAccount, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TargetUser == nil {
		return nil, errors.New("invalid value for required argument 'TargetUser'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"secretKey",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IamServiceAccount
	err := ctx.RegisterResource("minio:index/iamServiceAccount:IamServiceAccount", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIamServiceAccount gets an existing IamServiceAccount resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIamServiceAccount(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IamServiceAccountState, opts ...pulumi.ResourceOption) (*IamServiceAccount, error) {
	var resource IamServiceAccount
	err := ctx.ReadResource("minio:index/iamServiceAccount:IamServiceAccount", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IamServiceAccount resources.
type iamServiceAccountState struct {
	AccessKey *string `pulumi:"accessKey"`
	// Disable service account
	DisableUser *bool `pulumi:"disableUser"`
	// policy of service account
	Policy     *string `pulumi:"policy"`
	SecretKey  *string `pulumi:"secretKey"`
	Status     *string `pulumi:"status"`
	TargetUser *string `pulumi:"targetUser"`
	// rotate secret key
	UpdateSecret *bool `pulumi:"updateSecret"`
}

type IamServiceAccountState struct {
	AccessKey pulumi.StringPtrInput
	// Disable service account
	DisableUser pulumi.BoolPtrInput
	// policy of service account
	Policy     pulumi.StringPtrInput
	SecretKey  pulumi.StringPtrInput
	Status     pulumi.StringPtrInput
	TargetUser pulumi.StringPtrInput
	// rotate secret key
	UpdateSecret pulumi.BoolPtrInput
}

func (IamServiceAccountState) ElementType() reflect.Type {
	return reflect.TypeOf((*iamServiceAccountState)(nil)).Elem()
}

type iamServiceAccountArgs struct {
	// Disable service account
	DisableUser *bool `pulumi:"disableUser"`
	// policy of service account
	Policy     *string `pulumi:"policy"`
	TargetUser string  `pulumi:"targetUser"`
	// rotate secret key
	UpdateSecret *bool `pulumi:"updateSecret"`
}

// The set of arguments for constructing a IamServiceAccount resource.
type IamServiceAccountArgs struct {
	// Disable service account
	DisableUser pulumi.BoolPtrInput
	// policy of service account
	Policy     pulumi.StringPtrInput
	TargetUser pulumi.StringInput
	// rotate secret key
	UpdateSecret pulumi.BoolPtrInput
}

func (IamServiceAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*iamServiceAccountArgs)(nil)).Elem()
}

type IamServiceAccountInput interface {
	pulumi.Input

	ToIamServiceAccountOutput() IamServiceAccountOutput
	ToIamServiceAccountOutputWithContext(ctx context.Context) IamServiceAccountOutput
}

func (*IamServiceAccount) ElementType() reflect.Type {
	return reflect.TypeOf((**IamServiceAccount)(nil)).Elem()
}

func (i *IamServiceAccount) ToIamServiceAccountOutput() IamServiceAccountOutput {
	return i.ToIamServiceAccountOutputWithContext(context.Background())
}

func (i *IamServiceAccount) ToIamServiceAccountOutputWithContext(ctx context.Context) IamServiceAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamServiceAccountOutput)
}

// IamServiceAccountArrayInput is an input type that accepts IamServiceAccountArray and IamServiceAccountArrayOutput values.
// You can construct a concrete instance of `IamServiceAccountArrayInput` via:
//
//	IamServiceAccountArray{ IamServiceAccountArgs{...} }
type IamServiceAccountArrayInput interface {
	pulumi.Input

	ToIamServiceAccountArrayOutput() IamServiceAccountArrayOutput
	ToIamServiceAccountArrayOutputWithContext(context.Context) IamServiceAccountArrayOutput
}

type IamServiceAccountArray []IamServiceAccountInput

func (IamServiceAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IamServiceAccount)(nil)).Elem()
}

func (i IamServiceAccountArray) ToIamServiceAccountArrayOutput() IamServiceAccountArrayOutput {
	return i.ToIamServiceAccountArrayOutputWithContext(context.Background())
}

func (i IamServiceAccountArray) ToIamServiceAccountArrayOutputWithContext(ctx context.Context) IamServiceAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamServiceAccountArrayOutput)
}

// IamServiceAccountMapInput is an input type that accepts IamServiceAccountMap and IamServiceAccountMapOutput values.
// You can construct a concrete instance of `IamServiceAccountMapInput` via:
//
//	IamServiceAccountMap{ "key": IamServiceAccountArgs{...} }
type IamServiceAccountMapInput interface {
	pulumi.Input

	ToIamServiceAccountMapOutput() IamServiceAccountMapOutput
	ToIamServiceAccountMapOutputWithContext(context.Context) IamServiceAccountMapOutput
}

type IamServiceAccountMap map[string]IamServiceAccountInput

func (IamServiceAccountMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IamServiceAccount)(nil)).Elem()
}

func (i IamServiceAccountMap) ToIamServiceAccountMapOutput() IamServiceAccountMapOutput {
	return i.ToIamServiceAccountMapOutputWithContext(context.Background())
}

func (i IamServiceAccountMap) ToIamServiceAccountMapOutputWithContext(ctx context.Context) IamServiceAccountMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamServiceAccountMapOutput)
}

type IamServiceAccountOutput struct{ *pulumi.OutputState }

func (IamServiceAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IamServiceAccount)(nil)).Elem()
}

func (o IamServiceAccountOutput) ToIamServiceAccountOutput() IamServiceAccountOutput {
	return o
}

func (o IamServiceAccountOutput) ToIamServiceAccountOutputWithContext(ctx context.Context) IamServiceAccountOutput {
	return o
}

func (o IamServiceAccountOutput) AccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v *IamServiceAccount) pulumi.StringOutput { return v.AccessKey }).(pulumi.StringOutput)
}

// Disable service account
func (o IamServiceAccountOutput) DisableUser() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IamServiceAccount) pulumi.BoolPtrOutput { return v.DisableUser }).(pulumi.BoolPtrOutput)
}

// policy of service account
func (o IamServiceAccountOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IamServiceAccount) pulumi.StringPtrOutput { return v.Policy }).(pulumi.StringPtrOutput)
}

func (o IamServiceAccountOutput) SecretKey() pulumi.StringOutput {
	return o.ApplyT(func(v *IamServiceAccount) pulumi.StringOutput { return v.SecretKey }).(pulumi.StringOutput)
}

func (o IamServiceAccountOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *IamServiceAccount) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o IamServiceAccountOutput) TargetUser() pulumi.StringOutput {
	return o.ApplyT(func(v *IamServiceAccount) pulumi.StringOutput { return v.TargetUser }).(pulumi.StringOutput)
}

// rotate secret key
func (o IamServiceAccountOutput) UpdateSecret() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IamServiceAccount) pulumi.BoolPtrOutput { return v.UpdateSecret }).(pulumi.BoolPtrOutput)
}

type IamServiceAccountArrayOutput struct{ *pulumi.OutputState }

func (IamServiceAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IamServiceAccount)(nil)).Elem()
}

func (o IamServiceAccountArrayOutput) ToIamServiceAccountArrayOutput() IamServiceAccountArrayOutput {
	return o
}

func (o IamServiceAccountArrayOutput) ToIamServiceAccountArrayOutputWithContext(ctx context.Context) IamServiceAccountArrayOutput {
	return o
}

func (o IamServiceAccountArrayOutput) Index(i pulumi.IntInput) IamServiceAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IamServiceAccount {
		return vs[0].([]*IamServiceAccount)[vs[1].(int)]
	}).(IamServiceAccountOutput)
}

type IamServiceAccountMapOutput struct{ *pulumi.OutputState }

func (IamServiceAccountMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IamServiceAccount)(nil)).Elem()
}

func (o IamServiceAccountMapOutput) ToIamServiceAccountMapOutput() IamServiceAccountMapOutput {
	return o
}

func (o IamServiceAccountMapOutput) ToIamServiceAccountMapOutputWithContext(ctx context.Context) IamServiceAccountMapOutput {
	return o
}

func (o IamServiceAccountMapOutput) MapIndex(k pulumi.StringInput) IamServiceAccountOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IamServiceAccount {
		return vs[0].(map[string]*IamServiceAccount)[vs[1].(string)]
	}).(IamServiceAccountOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IamServiceAccountInput)(nil)).Elem(), &IamServiceAccount{})
	pulumi.RegisterInputType(reflect.TypeOf((*IamServiceAccountArrayInput)(nil)).Elem(), IamServiceAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IamServiceAccountMapInput)(nil)).Elem(), IamServiceAccountMap{})
	pulumi.RegisterOutputType(IamServiceAccountOutput{})
	pulumi.RegisterOutputType(IamServiceAccountArrayOutput{})
	pulumi.RegisterOutputType(IamServiceAccountMapOutput{})
}
