// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package minio

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"fmt"
//
// 	"github.com/pulumi/pulumi-minio/sdk/go/minio"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := minio.NewIamGroup(ctx, "developerIamGroup", nil)
// 		if err != nil {
// 			return err
// 		}
// 		_, err = minio.NewIamGroupPolicy(ctx, "testPolicy", &minio.IamGroupPolicyArgs{
// 			Policy: pulumi.String(fmt.Sprintf("%v%v%v%v%v%v%v%v%v%v%v%v%v", "{\n", "  \"Version\":\"2012-10-17\",\n", "  \"Statement\": [\n", "    {\n", "      \"Sid\":\"ListAllBucket\",\n", "      \"Effect\": \"Allow\",\n", "      \"Action\": [\"s3:PutObject\"],\n", "      \"Principal\":\"*\",\n", "      \"Resource\": \"arn:aws:s3:::state-terraform-s3/*\"\n", "    }\n", "  ]\n", "}\n", "\n")),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		developerIamGroupPolicyAttachment, err := minio.NewIamGroupPolicyAttachment(ctx, "developerIamGroupPolicyAttachment", &minio.IamGroupPolicyAttachmentArgs{
// 			GroupName:  pulumi.Any(minio_iam_group.Group.Name),
// 			PolicyName: pulumi.Any(minio_iam_policy.Test_policy.Id),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("minioName", developerIamGroupPolicyAttachment.ID())
// 		ctx.Export("minioUsers", developerIamGroupPolicyAttachment.GroupName)
// 		ctx.Export("minioGroup", developerIamGroupPolicyAttachment.PolicyName)
// 		return nil
// 	})
// }
// ```
type IamGroupPolicyAttachment struct {
	pulumi.CustomResourceState

	GroupName  pulumi.StringOutput `pulumi:"groupName"`
	PolicyName pulumi.StringOutput `pulumi:"policyName"`
}

// NewIamGroupPolicyAttachment registers a new resource with the given unique name, arguments, and options.
func NewIamGroupPolicyAttachment(ctx *pulumi.Context,
	name string, args *IamGroupPolicyAttachmentArgs, opts ...pulumi.ResourceOption) (*IamGroupPolicyAttachment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GroupName == nil {
		return nil, errors.New("invalid value for required argument 'GroupName'")
	}
	if args.PolicyName == nil {
		return nil, errors.New("invalid value for required argument 'PolicyName'")
	}
	var resource IamGroupPolicyAttachment
	err := ctx.RegisterResource("minio:index/iamGroupPolicyAttachment:IamGroupPolicyAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIamGroupPolicyAttachment gets an existing IamGroupPolicyAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIamGroupPolicyAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IamGroupPolicyAttachmentState, opts ...pulumi.ResourceOption) (*IamGroupPolicyAttachment, error) {
	var resource IamGroupPolicyAttachment
	err := ctx.ReadResource("minio:index/iamGroupPolicyAttachment:IamGroupPolicyAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IamGroupPolicyAttachment resources.
type iamGroupPolicyAttachmentState struct {
	GroupName  *string `pulumi:"groupName"`
	PolicyName *string `pulumi:"policyName"`
}

type IamGroupPolicyAttachmentState struct {
	GroupName  pulumi.StringPtrInput
	PolicyName pulumi.StringPtrInput
}

func (IamGroupPolicyAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*iamGroupPolicyAttachmentState)(nil)).Elem()
}

type iamGroupPolicyAttachmentArgs struct {
	GroupName  string `pulumi:"groupName"`
	PolicyName string `pulumi:"policyName"`
}

// The set of arguments for constructing a IamGroupPolicyAttachment resource.
type IamGroupPolicyAttachmentArgs struct {
	GroupName  pulumi.StringInput
	PolicyName pulumi.StringInput
}

func (IamGroupPolicyAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*iamGroupPolicyAttachmentArgs)(nil)).Elem()
}

type IamGroupPolicyAttachmentInput interface {
	pulumi.Input

	ToIamGroupPolicyAttachmentOutput() IamGroupPolicyAttachmentOutput
	ToIamGroupPolicyAttachmentOutputWithContext(ctx context.Context) IamGroupPolicyAttachmentOutput
}

func (*IamGroupPolicyAttachment) ElementType() reflect.Type {
	return reflect.TypeOf((*IamGroupPolicyAttachment)(nil))
}

func (i *IamGroupPolicyAttachment) ToIamGroupPolicyAttachmentOutput() IamGroupPolicyAttachmentOutput {
	return i.ToIamGroupPolicyAttachmentOutputWithContext(context.Background())
}

func (i *IamGroupPolicyAttachment) ToIamGroupPolicyAttachmentOutputWithContext(ctx context.Context) IamGroupPolicyAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamGroupPolicyAttachmentOutput)
}

func (i *IamGroupPolicyAttachment) ToIamGroupPolicyAttachmentPtrOutput() IamGroupPolicyAttachmentPtrOutput {
	return i.ToIamGroupPolicyAttachmentPtrOutputWithContext(context.Background())
}

func (i *IamGroupPolicyAttachment) ToIamGroupPolicyAttachmentPtrOutputWithContext(ctx context.Context) IamGroupPolicyAttachmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamGroupPolicyAttachmentPtrOutput)
}

type IamGroupPolicyAttachmentPtrInput interface {
	pulumi.Input

	ToIamGroupPolicyAttachmentPtrOutput() IamGroupPolicyAttachmentPtrOutput
	ToIamGroupPolicyAttachmentPtrOutputWithContext(ctx context.Context) IamGroupPolicyAttachmentPtrOutput
}

type iamGroupPolicyAttachmentPtrType IamGroupPolicyAttachmentArgs

func (*iamGroupPolicyAttachmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IamGroupPolicyAttachment)(nil))
}

func (i *iamGroupPolicyAttachmentPtrType) ToIamGroupPolicyAttachmentPtrOutput() IamGroupPolicyAttachmentPtrOutput {
	return i.ToIamGroupPolicyAttachmentPtrOutputWithContext(context.Background())
}

func (i *iamGroupPolicyAttachmentPtrType) ToIamGroupPolicyAttachmentPtrOutputWithContext(ctx context.Context) IamGroupPolicyAttachmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamGroupPolicyAttachmentPtrOutput)
}

// IamGroupPolicyAttachmentArrayInput is an input type that accepts IamGroupPolicyAttachmentArray and IamGroupPolicyAttachmentArrayOutput values.
// You can construct a concrete instance of `IamGroupPolicyAttachmentArrayInput` via:
//
//          IamGroupPolicyAttachmentArray{ IamGroupPolicyAttachmentArgs{...} }
type IamGroupPolicyAttachmentArrayInput interface {
	pulumi.Input

	ToIamGroupPolicyAttachmentArrayOutput() IamGroupPolicyAttachmentArrayOutput
	ToIamGroupPolicyAttachmentArrayOutputWithContext(context.Context) IamGroupPolicyAttachmentArrayOutput
}

type IamGroupPolicyAttachmentArray []IamGroupPolicyAttachmentInput

func (IamGroupPolicyAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*IamGroupPolicyAttachment)(nil))
}

func (i IamGroupPolicyAttachmentArray) ToIamGroupPolicyAttachmentArrayOutput() IamGroupPolicyAttachmentArrayOutput {
	return i.ToIamGroupPolicyAttachmentArrayOutputWithContext(context.Background())
}

func (i IamGroupPolicyAttachmentArray) ToIamGroupPolicyAttachmentArrayOutputWithContext(ctx context.Context) IamGroupPolicyAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamGroupPolicyAttachmentArrayOutput)
}

// IamGroupPolicyAttachmentMapInput is an input type that accepts IamGroupPolicyAttachmentMap and IamGroupPolicyAttachmentMapOutput values.
// You can construct a concrete instance of `IamGroupPolicyAttachmentMapInput` via:
//
//          IamGroupPolicyAttachmentMap{ "key": IamGroupPolicyAttachmentArgs{...} }
type IamGroupPolicyAttachmentMapInput interface {
	pulumi.Input

	ToIamGroupPolicyAttachmentMapOutput() IamGroupPolicyAttachmentMapOutput
	ToIamGroupPolicyAttachmentMapOutputWithContext(context.Context) IamGroupPolicyAttachmentMapOutput
}

type IamGroupPolicyAttachmentMap map[string]IamGroupPolicyAttachmentInput

func (IamGroupPolicyAttachmentMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*IamGroupPolicyAttachment)(nil))
}

func (i IamGroupPolicyAttachmentMap) ToIamGroupPolicyAttachmentMapOutput() IamGroupPolicyAttachmentMapOutput {
	return i.ToIamGroupPolicyAttachmentMapOutputWithContext(context.Background())
}

func (i IamGroupPolicyAttachmentMap) ToIamGroupPolicyAttachmentMapOutputWithContext(ctx context.Context) IamGroupPolicyAttachmentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamGroupPolicyAttachmentMapOutput)
}

type IamGroupPolicyAttachmentOutput struct {
	*pulumi.OutputState
}

func (IamGroupPolicyAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IamGroupPolicyAttachment)(nil))
}

func (o IamGroupPolicyAttachmentOutput) ToIamGroupPolicyAttachmentOutput() IamGroupPolicyAttachmentOutput {
	return o
}

func (o IamGroupPolicyAttachmentOutput) ToIamGroupPolicyAttachmentOutputWithContext(ctx context.Context) IamGroupPolicyAttachmentOutput {
	return o
}

func (o IamGroupPolicyAttachmentOutput) ToIamGroupPolicyAttachmentPtrOutput() IamGroupPolicyAttachmentPtrOutput {
	return o.ToIamGroupPolicyAttachmentPtrOutputWithContext(context.Background())
}

func (o IamGroupPolicyAttachmentOutput) ToIamGroupPolicyAttachmentPtrOutputWithContext(ctx context.Context) IamGroupPolicyAttachmentPtrOutput {
	return o.ApplyT(func(v IamGroupPolicyAttachment) *IamGroupPolicyAttachment {
		return &v
	}).(IamGroupPolicyAttachmentPtrOutput)
}

type IamGroupPolicyAttachmentPtrOutput struct {
	*pulumi.OutputState
}

func (IamGroupPolicyAttachmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IamGroupPolicyAttachment)(nil))
}

func (o IamGroupPolicyAttachmentPtrOutput) ToIamGroupPolicyAttachmentPtrOutput() IamGroupPolicyAttachmentPtrOutput {
	return o
}

func (o IamGroupPolicyAttachmentPtrOutput) ToIamGroupPolicyAttachmentPtrOutputWithContext(ctx context.Context) IamGroupPolicyAttachmentPtrOutput {
	return o
}

type IamGroupPolicyAttachmentArrayOutput struct{ *pulumi.OutputState }

func (IamGroupPolicyAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IamGroupPolicyAttachment)(nil))
}

func (o IamGroupPolicyAttachmentArrayOutput) ToIamGroupPolicyAttachmentArrayOutput() IamGroupPolicyAttachmentArrayOutput {
	return o
}

func (o IamGroupPolicyAttachmentArrayOutput) ToIamGroupPolicyAttachmentArrayOutputWithContext(ctx context.Context) IamGroupPolicyAttachmentArrayOutput {
	return o
}

func (o IamGroupPolicyAttachmentArrayOutput) Index(i pulumi.IntInput) IamGroupPolicyAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IamGroupPolicyAttachment {
		return vs[0].([]IamGroupPolicyAttachment)[vs[1].(int)]
	}).(IamGroupPolicyAttachmentOutput)
}

type IamGroupPolicyAttachmentMapOutput struct{ *pulumi.OutputState }

func (IamGroupPolicyAttachmentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]IamGroupPolicyAttachment)(nil))
}

func (o IamGroupPolicyAttachmentMapOutput) ToIamGroupPolicyAttachmentMapOutput() IamGroupPolicyAttachmentMapOutput {
	return o
}

func (o IamGroupPolicyAttachmentMapOutput) ToIamGroupPolicyAttachmentMapOutputWithContext(ctx context.Context) IamGroupPolicyAttachmentMapOutput {
	return o
}

func (o IamGroupPolicyAttachmentMapOutput) MapIndex(k pulumi.StringInput) IamGroupPolicyAttachmentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) IamGroupPolicyAttachment {
		return vs[0].(map[string]IamGroupPolicyAttachment)[vs[1].(string)]
	}).(IamGroupPolicyAttachmentOutput)
}

func init() {
	pulumi.RegisterOutputType(IamGroupPolicyAttachmentOutput{})
	pulumi.RegisterOutputType(IamGroupPolicyAttachmentPtrOutput{})
	pulumi.RegisterOutputType(IamGroupPolicyAttachmentArrayOutput{})
	pulumi.RegisterOutputType(IamGroupPolicyAttachmentMapOutput{})
}
