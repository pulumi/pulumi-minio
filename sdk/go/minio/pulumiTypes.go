// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package minio

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-minio/sdk/v2/go/minio/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type IlmPolicyRule struct {
	Expiration *string `pulumi:"expiration"`
	Filter     *string `pulumi:"filter"`
	// The ID of this resource.
	Id                              string                 `pulumi:"id"`
	NoncurrentVersionExpirationDays *int                   `pulumi:"noncurrentVersionExpirationDays"`
	Status                          *string                `pulumi:"status"`
	Tags                            map[string]interface{} `pulumi:"tags"`
}

// IlmPolicyRuleInput is an input type that accepts IlmPolicyRuleArgs and IlmPolicyRuleOutput values.
// You can construct a concrete instance of `IlmPolicyRuleInput` via:
//
//	IlmPolicyRuleArgs{...}
type IlmPolicyRuleInput interface {
	pulumi.Input

	ToIlmPolicyRuleOutput() IlmPolicyRuleOutput
	ToIlmPolicyRuleOutputWithContext(context.Context) IlmPolicyRuleOutput
}

type IlmPolicyRuleArgs struct {
	Expiration pulumi.StringPtrInput `pulumi:"expiration"`
	Filter     pulumi.StringPtrInput `pulumi:"filter"`
	// The ID of this resource.
	Id                              pulumi.StringInput    `pulumi:"id"`
	NoncurrentVersionExpirationDays pulumi.IntPtrInput    `pulumi:"noncurrentVersionExpirationDays"`
	Status                          pulumi.StringPtrInput `pulumi:"status"`
	Tags                            pulumi.MapInput       `pulumi:"tags"`
}

func (IlmPolicyRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IlmPolicyRule)(nil)).Elem()
}

func (i IlmPolicyRuleArgs) ToIlmPolicyRuleOutput() IlmPolicyRuleOutput {
	return i.ToIlmPolicyRuleOutputWithContext(context.Background())
}

func (i IlmPolicyRuleArgs) ToIlmPolicyRuleOutputWithContext(ctx context.Context) IlmPolicyRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IlmPolicyRuleOutput)
}

// IlmPolicyRuleArrayInput is an input type that accepts IlmPolicyRuleArray and IlmPolicyRuleArrayOutput values.
// You can construct a concrete instance of `IlmPolicyRuleArrayInput` via:
//
//	IlmPolicyRuleArray{ IlmPolicyRuleArgs{...} }
type IlmPolicyRuleArrayInput interface {
	pulumi.Input

	ToIlmPolicyRuleArrayOutput() IlmPolicyRuleArrayOutput
	ToIlmPolicyRuleArrayOutputWithContext(context.Context) IlmPolicyRuleArrayOutput
}

type IlmPolicyRuleArray []IlmPolicyRuleInput

func (IlmPolicyRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IlmPolicyRule)(nil)).Elem()
}

func (i IlmPolicyRuleArray) ToIlmPolicyRuleArrayOutput() IlmPolicyRuleArrayOutput {
	return i.ToIlmPolicyRuleArrayOutputWithContext(context.Background())
}

func (i IlmPolicyRuleArray) ToIlmPolicyRuleArrayOutputWithContext(ctx context.Context) IlmPolicyRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IlmPolicyRuleArrayOutput)
}

type IlmPolicyRuleOutput struct{ *pulumi.OutputState }

func (IlmPolicyRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IlmPolicyRule)(nil)).Elem()
}

func (o IlmPolicyRuleOutput) ToIlmPolicyRuleOutput() IlmPolicyRuleOutput {
	return o
}

func (o IlmPolicyRuleOutput) ToIlmPolicyRuleOutputWithContext(ctx context.Context) IlmPolicyRuleOutput {
	return o
}

func (o IlmPolicyRuleOutput) Expiration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IlmPolicyRule) *string { return v.Expiration }).(pulumi.StringPtrOutput)
}

func (o IlmPolicyRuleOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IlmPolicyRule) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// The ID of this resource.
func (o IlmPolicyRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v IlmPolicyRule) string { return v.Id }).(pulumi.StringOutput)
}

func (o IlmPolicyRuleOutput) NoncurrentVersionExpirationDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IlmPolicyRule) *int { return v.NoncurrentVersionExpirationDays }).(pulumi.IntPtrOutput)
}

func (o IlmPolicyRuleOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IlmPolicyRule) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o IlmPolicyRuleOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v IlmPolicyRule) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

type IlmPolicyRuleArrayOutput struct{ *pulumi.OutputState }

func (IlmPolicyRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IlmPolicyRule)(nil)).Elem()
}

func (o IlmPolicyRuleArrayOutput) ToIlmPolicyRuleArrayOutput() IlmPolicyRuleArrayOutput {
	return o
}

func (o IlmPolicyRuleArrayOutput) ToIlmPolicyRuleArrayOutputWithContext(ctx context.Context) IlmPolicyRuleArrayOutput {
	return o
}

func (o IlmPolicyRuleArrayOutput) Index(i pulumi.IntInput) IlmPolicyRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IlmPolicyRule {
		return vs[0].([]IlmPolicyRule)[vs[1].(int)]
	}).(IlmPolicyRuleOutput)
}

type S3BucketNotificationQueue struct {
	Events       []string `pulumi:"events"`
	FilterPrefix *string  `pulumi:"filterPrefix"`
	FilterSuffix *string  `pulumi:"filterSuffix"`
	// The ID of this resource.
	Id       *string `pulumi:"id"`
	QueueArn string  `pulumi:"queueArn"`
}

// S3BucketNotificationQueueInput is an input type that accepts S3BucketNotificationQueueArgs and S3BucketNotificationQueueOutput values.
// You can construct a concrete instance of `S3BucketNotificationQueueInput` via:
//
//	S3BucketNotificationQueueArgs{...}
type S3BucketNotificationQueueInput interface {
	pulumi.Input

	ToS3BucketNotificationQueueOutput() S3BucketNotificationQueueOutput
	ToS3BucketNotificationQueueOutputWithContext(context.Context) S3BucketNotificationQueueOutput
}

type S3BucketNotificationQueueArgs struct {
	Events       pulumi.StringArrayInput `pulumi:"events"`
	FilterPrefix pulumi.StringPtrInput   `pulumi:"filterPrefix"`
	FilterSuffix pulumi.StringPtrInput   `pulumi:"filterSuffix"`
	// The ID of this resource.
	Id       pulumi.StringPtrInput `pulumi:"id"`
	QueueArn pulumi.StringInput    `pulumi:"queueArn"`
}

func (S3BucketNotificationQueueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3BucketNotificationQueue)(nil)).Elem()
}

func (i S3BucketNotificationQueueArgs) ToS3BucketNotificationQueueOutput() S3BucketNotificationQueueOutput {
	return i.ToS3BucketNotificationQueueOutputWithContext(context.Background())
}

func (i S3BucketNotificationQueueArgs) ToS3BucketNotificationQueueOutputWithContext(ctx context.Context) S3BucketNotificationQueueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3BucketNotificationQueueOutput)
}

// S3BucketNotificationQueueArrayInput is an input type that accepts S3BucketNotificationQueueArray and S3BucketNotificationQueueArrayOutput values.
// You can construct a concrete instance of `S3BucketNotificationQueueArrayInput` via:
//
//	S3BucketNotificationQueueArray{ S3BucketNotificationQueueArgs{...} }
type S3BucketNotificationQueueArrayInput interface {
	pulumi.Input

	ToS3BucketNotificationQueueArrayOutput() S3BucketNotificationQueueArrayOutput
	ToS3BucketNotificationQueueArrayOutputWithContext(context.Context) S3BucketNotificationQueueArrayOutput
}

type S3BucketNotificationQueueArray []S3BucketNotificationQueueInput

func (S3BucketNotificationQueueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3BucketNotificationQueue)(nil)).Elem()
}

func (i S3BucketNotificationQueueArray) ToS3BucketNotificationQueueArrayOutput() S3BucketNotificationQueueArrayOutput {
	return i.ToS3BucketNotificationQueueArrayOutputWithContext(context.Background())
}

func (i S3BucketNotificationQueueArray) ToS3BucketNotificationQueueArrayOutputWithContext(ctx context.Context) S3BucketNotificationQueueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3BucketNotificationQueueArrayOutput)
}

type S3BucketNotificationQueueOutput struct{ *pulumi.OutputState }

func (S3BucketNotificationQueueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3BucketNotificationQueue)(nil)).Elem()
}

func (o S3BucketNotificationQueueOutput) ToS3BucketNotificationQueueOutput() S3BucketNotificationQueueOutput {
	return o
}

func (o S3BucketNotificationQueueOutput) ToS3BucketNotificationQueueOutputWithContext(ctx context.Context) S3BucketNotificationQueueOutput {
	return o
}

func (o S3BucketNotificationQueueOutput) Events() pulumi.StringArrayOutput {
	return o.ApplyT(func(v S3BucketNotificationQueue) []string { return v.Events }).(pulumi.StringArrayOutput)
}

func (o S3BucketNotificationQueueOutput) FilterPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3BucketNotificationQueue) *string { return v.FilterPrefix }).(pulumi.StringPtrOutput)
}

func (o S3BucketNotificationQueueOutput) FilterSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3BucketNotificationQueue) *string { return v.FilterSuffix }).(pulumi.StringPtrOutput)
}

// The ID of this resource.
func (o S3BucketNotificationQueueOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3BucketNotificationQueue) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o S3BucketNotificationQueueOutput) QueueArn() pulumi.StringOutput {
	return o.ApplyT(func(v S3BucketNotificationQueue) string { return v.QueueArn }).(pulumi.StringOutput)
}

type S3BucketNotificationQueueArrayOutput struct{ *pulumi.OutputState }

func (S3BucketNotificationQueueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3BucketNotificationQueue)(nil)).Elem()
}

func (o S3BucketNotificationQueueArrayOutput) ToS3BucketNotificationQueueArrayOutput() S3BucketNotificationQueueArrayOutput {
	return o
}

func (o S3BucketNotificationQueueArrayOutput) ToS3BucketNotificationQueueArrayOutputWithContext(ctx context.Context) S3BucketNotificationQueueArrayOutput {
	return o
}

func (o S3BucketNotificationQueueArrayOutput) Index(i pulumi.IntInput) S3BucketNotificationQueueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) S3BucketNotificationQueue {
		return vs[0].([]S3BucketNotificationQueue)[vs[1].(int)]
	}).(S3BucketNotificationQueueOutput)
}

type S3BucketReplicationRule struct {
	// Rule ARN genrated by MinIO
	Arn *string `pulumi:"arn"`
	// Whether or not to synchronise marker deletion
	DeleteMarkerReplication *bool `pulumi:"deleteMarkerReplication"`
	// Whether or not to propagate deletion
	DeleteReplication *bool `pulumi:"deleteReplication"`
	// Whether or not this rule is enabled
	Enabled *bool `pulumi:"enabled"`
	// Whether or not to synchronise object created prior the replication configuration
	ExistingObjectReplication *bool `pulumi:"existingObjectReplication"`
	// Rule ID generated by MinIO
	Id *string `pulumi:"id"`
	// Whether or not to synchonise buckets and objects metadata (such as locks). This must be enabled to achieve a two-way replication
	MetadataSync *bool `pulumi:"metadataSync"`
	// Bucket prefix object must be in to be syncronised
	Prefix *string `pulumi:"prefix"`
	// Rule priority. If omitted, the inverted index will be used as priority. This means that the first rule definition will have the higher priority
	Priority *int `pulumi:"priority"`
	// Tags which objects must have to be syncronised
	Tags map[string]interface{} `pulumi:"tags"`
	// Bucket prefix
	Target S3BucketReplicationRuleTarget `pulumi:"target"`
}

// S3BucketReplicationRuleInput is an input type that accepts S3BucketReplicationRuleArgs and S3BucketReplicationRuleOutput values.
// You can construct a concrete instance of `S3BucketReplicationRuleInput` via:
//
//	S3BucketReplicationRuleArgs{...}
type S3BucketReplicationRuleInput interface {
	pulumi.Input

	ToS3BucketReplicationRuleOutput() S3BucketReplicationRuleOutput
	ToS3BucketReplicationRuleOutputWithContext(context.Context) S3BucketReplicationRuleOutput
}

type S3BucketReplicationRuleArgs struct {
	// Rule ARN genrated by MinIO
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// Whether or not to synchronise marker deletion
	DeleteMarkerReplication pulumi.BoolPtrInput `pulumi:"deleteMarkerReplication"`
	// Whether or not to propagate deletion
	DeleteReplication pulumi.BoolPtrInput `pulumi:"deleteReplication"`
	// Whether or not this rule is enabled
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Whether or not to synchronise object created prior the replication configuration
	ExistingObjectReplication pulumi.BoolPtrInput `pulumi:"existingObjectReplication"`
	// Rule ID generated by MinIO
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Whether or not to synchonise buckets and objects metadata (such as locks). This must be enabled to achieve a two-way replication
	MetadataSync pulumi.BoolPtrInput `pulumi:"metadataSync"`
	// Bucket prefix object must be in to be syncronised
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// Rule priority. If omitted, the inverted index will be used as priority. This means that the first rule definition will have the higher priority
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Tags which objects must have to be syncronised
	Tags pulumi.MapInput `pulumi:"tags"`
	// Bucket prefix
	Target S3BucketReplicationRuleTargetInput `pulumi:"target"`
}

func (S3BucketReplicationRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3BucketReplicationRule)(nil)).Elem()
}

func (i S3BucketReplicationRuleArgs) ToS3BucketReplicationRuleOutput() S3BucketReplicationRuleOutput {
	return i.ToS3BucketReplicationRuleOutputWithContext(context.Background())
}

func (i S3BucketReplicationRuleArgs) ToS3BucketReplicationRuleOutputWithContext(ctx context.Context) S3BucketReplicationRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3BucketReplicationRuleOutput)
}

// S3BucketReplicationRuleArrayInput is an input type that accepts S3BucketReplicationRuleArray and S3BucketReplicationRuleArrayOutput values.
// You can construct a concrete instance of `S3BucketReplicationRuleArrayInput` via:
//
//	S3BucketReplicationRuleArray{ S3BucketReplicationRuleArgs{...} }
type S3BucketReplicationRuleArrayInput interface {
	pulumi.Input

	ToS3BucketReplicationRuleArrayOutput() S3BucketReplicationRuleArrayOutput
	ToS3BucketReplicationRuleArrayOutputWithContext(context.Context) S3BucketReplicationRuleArrayOutput
}

type S3BucketReplicationRuleArray []S3BucketReplicationRuleInput

func (S3BucketReplicationRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3BucketReplicationRule)(nil)).Elem()
}

func (i S3BucketReplicationRuleArray) ToS3BucketReplicationRuleArrayOutput() S3BucketReplicationRuleArrayOutput {
	return i.ToS3BucketReplicationRuleArrayOutputWithContext(context.Background())
}

func (i S3BucketReplicationRuleArray) ToS3BucketReplicationRuleArrayOutputWithContext(ctx context.Context) S3BucketReplicationRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3BucketReplicationRuleArrayOutput)
}

type S3BucketReplicationRuleOutput struct{ *pulumi.OutputState }

func (S3BucketReplicationRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3BucketReplicationRule)(nil)).Elem()
}

func (o S3BucketReplicationRuleOutput) ToS3BucketReplicationRuleOutput() S3BucketReplicationRuleOutput {
	return o
}

func (o S3BucketReplicationRuleOutput) ToS3BucketReplicationRuleOutputWithContext(ctx context.Context) S3BucketReplicationRuleOutput {
	return o
}

// Rule ARN genrated by MinIO
func (o S3BucketReplicationRuleOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3BucketReplicationRule) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// Whether or not to synchronise marker deletion
func (o S3BucketReplicationRuleOutput) DeleteMarkerReplication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v S3BucketReplicationRule) *bool { return v.DeleteMarkerReplication }).(pulumi.BoolPtrOutput)
}

// Whether or not to propagate deletion
func (o S3BucketReplicationRuleOutput) DeleteReplication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v S3BucketReplicationRule) *bool { return v.DeleteReplication }).(pulumi.BoolPtrOutput)
}

// Whether or not this rule is enabled
func (o S3BucketReplicationRuleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v S3BucketReplicationRule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Whether or not to synchronise object created prior the replication configuration
func (o S3BucketReplicationRuleOutput) ExistingObjectReplication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v S3BucketReplicationRule) *bool { return v.ExistingObjectReplication }).(pulumi.BoolPtrOutput)
}

// Rule ID generated by MinIO
func (o S3BucketReplicationRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3BucketReplicationRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Whether or not to synchonise buckets and objects metadata (such as locks). This must be enabled to achieve a two-way replication
func (o S3BucketReplicationRuleOutput) MetadataSync() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v S3BucketReplicationRule) *bool { return v.MetadataSync }).(pulumi.BoolPtrOutput)
}

// Bucket prefix object must be in to be syncronised
func (o S3BucketReplicationRuleOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3BucketReplicationRule) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// Rule priority. If omitted, the inverted index will be used as priority. This means that the first rule definition will have the higher priority
func (o S3BucketReplicationRuleOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v S3BucketReplicationRule) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Tags which objects must have to be syncronised
func (o S3BucketReplicationRuleOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v S3BucketReplicationRule) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// Bucket prefix
func (o S3BucketReplicationRuleOutput) Target() S3BucketReplicationRuleTargetOutput {
	return o.ApplyT(func(v S3BucketReplicationRule) S3BucketReplicationRuleTarget { return v.Target }).(S3BucketReplicationRuleTargetOutput)
}

type S3BucketReplicationRuleArrayOutput struct{ *pulumi.OutputState }

func (S3BucketReplicationRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3BucketReplicationRule)(nil)).Elem()
}

func (o S3BucketReplicationRuleArrayOutput) ToS3BucketReplicationRuleArrayOutput() S3BucketReplicationRuleArrayOutput {
	return o
}

func (o S3BucketReplicationRuleArrayOutput) ToS3BucketReplicationRuleArrayOutputWithContext(ctx context.Context) S3BucketReplicationRuleArrayOutput {
	return o
}

func (o S3BucketReplicationRuleArrayOutput) Index(i pulumi.IntInput) S3BucketReplicationRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) S3BucketReplicationRule {
		return vs[0].([]S3BucketReplicationRule)[vs[1].(int)]
	}).(S3BucketReplicationRuleOutput)
}

type S3BucketReplicationRuleTarget struct {
	// Access key for the replication service account in the target MinIO
	AccessKey string `pulumi:"accessKey"`
	// Maximum bandwidth in byte per second that MinIO can used when syncronysing this target. Minimum is 100MB
	BandwidthLimt *string `pulumi:"bandwidthLimt"`
	// The name of the existing target bucket to replicate into
	Bucket string `pulumi:"bucket"`
	// Disable proxy for this target
	DisableProxy *bool `pulumi:"disableProxy"`
	// Period where the health of this target will be checked. This must be a valid duration, such as `5s` or `2m`
	HealthCheckPeriod *string `pulumi:"healthCheckPeriod"`
	// The target host (pair IP/port or domain port). If port is omitted, HTTPS port (or HTTP if unsecure) will be used. This host must be reachable by the MinIO instance itself
	Host string `pulumi:"host"`
	// Path of the Minio endpoint. This is usefull if MinIO API isn't served on at the root, e.g for `example.com/minio/`, the path would be `/minio/`
	Path *string `pulumi:"path"`
	// Whether to use path-style or virtual-hosted-syle request to this target (https://docs.aws.amazon.com/AmazonS3/latest/userguide/VirtualHosting.html#path-style-access). `auto` allows MinIO to chose automatically the appropriate option (Recommened)`
	PathStyle *string `pulumi:"pathStyle"`
	// Region of the target MinIO. This will be used to generate the target ARN
	Region *string `pulumi:"region"`
	// Secret key for the replication service account in the target MinIO. This is optional so it can be imported but prevent secret update
	SecretKey *string `pulumi:"secretKey"`
	Secure    *bool   `pulumi:"secure"`
	// The storage class to use for the object on this target
	StorageClass *string `pulumi:"storageClass"`
	// Use synchronous replication.
	Syncronous *bool `pulumi:"syncronous"`
}

// S3BucketReplicationRuleTargetInput is an input type that accepts S3BucketReplicationRuleTargetArgs and S3BucketReplicationRuleTargetOutput values.
// You can construct a concrete instance of `S3BucketReplicationRuleTargetInput` via:
//
//	S3BucketReplicationRuleTargetArgs{...}
type S3BucketReplicationRuleTargetInput interface {
	pulumi.Input

	ToS3BucketReplicationRuleTargetOutput() S3BucketReplicationRuleTargetOutput
	ToS3BucketReplicationRuleTargetOutputWithContext(context.Context) S3BucketReplicationRuleTargetOutput
}

type S3BucketReplicationRuleTargetArgs struct {
	// Access key for the replication service account in the target MinIO
	AccessKey pulumi.StringInput `pulumi:"accessKey"`
	// Maximum bandwidth in byte per second that MinIO can used when syncronysing this target. Minimum is 100MB
	BandwidthLimt pulumi.StringPtrInput `pulumi:"bandwidthLimt"`
	// The name of the existing target bucket to replicate into
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Disable proxy for this target
	DisableProxy pulumi.BoolPtrInput `pulumi:"disableProxy"`
	// Period where the health of this target will be checked. This must be a valid duration, such as `5s` or `2m`
	HealthCheckPeriod pulumi.StringPtrInput `pulumi:"healthCheckPeriod"`
	// The target host (pair IP/port or domain port). If port is omitted, HTTPS port (or HTTP if unsecure) will be used. This host must be reachable by the MinIO instance itself
	Host pulumi.StringInput `pulumi:"host"`
	// Path of the Minio endpoint. This is usefull if MinIO API isn't served on at the root, e.g for `example.com/minio/`, the path would be `/minio/`
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Whether to use path-style or virtual-hosted-syle request to this target (https://docs.aws.amazon.com/AmazonS3/latest/userguide/VirtualHosting.html#path-style-access). `auto` allows MinIO to chose automatically the appropriate option (Recommened)`
	PathStyle pulumi.StringPtrInput `pulumi:"pathStyle"`
	// Region of the target MinIO. This will be used to generate the target ARN
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Secret key for the replication service account in the target MinIO. This is optional so it can be imported but prevent secret update
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
	Secure    pulumi.BoolPtrInput   `pulumi:"secure"`
	// The storage class to use for the object on this target
	StorageClass pulumi.StringPtrInput `pulumi:"storageClass"`
	// Use synchronous replication.
	Syncronous pulumi.BoolPtrInput `pulumi:"syncronous"`
}

func (S3BucketReplicationRuleTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3BucketReplicationRuleTarget)(nil)).Elem()
}

func (i S3BucketReplicationRuleTargetArgs) ToS3BucketReplicationRuleTargetOutput() S3BucketReplicationRuleTargetOutput {
	return i.ToS3BucketReplicationRuleTargetOutputWithContext(context.Background())
}

func (i S3BucketReplicationRuleTargetArgs) ToS3BucketReplicationRuleTargetOutputWithContext(ctx context.Context) S3BucketReplicationRuleTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3BucketReplicationRuleTargetOutput)
}

type S3BucketReplicationRuleTargetOutput struct{ *pulumi.OutputState }

func (S3BucketReplicationRuleTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3BucketReplicationRuleTarget)(nil)).Elem()
}

func (o S3BucketReplicationRuleTargetOutput) ToS3BucketReplicationRuleTargetOutput() S3BucketReplicationRuleTargetOutput {
	return o
}

func (o S3BucketReplicationRuleTargetOutput) ToS3BucketReplicationRuleTargetOutputWithContext(ctx context.Context) S3BucketReplicationRuleTargetOutput {
	return o
}

// Access key for the replication service account in the target MinIO
func (o S3BucketReplicationRuleTargetOutput) AccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v S3BucketReplicationRuleTarget) string { return v.AccessKey }).(pulumi.StringOutput)
}

// Maximum bandwidth in byte per second that MinIO can used when syncronysing this target. Minimum is 100MB
func (o S3BucketReplicationRuleTargetOutput) BandwidthLimt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3BucketReplicationRuleTarget) *string { return v.BandwidthLimt }).(pulumi.StringPtrOutput)
}

// The name of the existing target bucket to replicate into
func (o S3BucketReplicationRuleTargetOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v S3BucketReplicationRuleTarget) string { return v.Bucket }).(pulumi.StringOutput)
}

// Disable proxy for this target
func (o S3BucketReplicationRuleTargetOutput) DisableProxy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v S3BucketReplicationRuleTarget) *bool { return v.DisableProxy }).(pulumi.BoolPtrOutput)
}

// Period where the health of this target will be checked. This must be a valid duration, such as `5s` or `2m`
func (o S3BucketReplicationRuleTargetOutput) HealthCheckPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3BucketReplicationRuleTarget) *string { return v.HealthCheckPeriod }).(pulumi.StringPtrOutput)
}

// The target host (pair IP/port or domain port). If port is omitted, HTTPS port (or HTTP if unsecure) will be used. This host must be reachable by the MinIO instance itself
func (o S3BucketReplicationRuleTargetOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v S3BucketReplicationRuleTarget) string { return v.Host }).(pulumi.StringOutput)
}

// Path of the Minio endpoint. This is usefull if MinIO API isn't served on at the root, e.g for `example.com/minio/`, the path would be `/minio/`
func (o S3BucketReplicationRuleTargetOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3BucketReplicationRuleTarget) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Whether to use path-style or virtual-hosted-syle request to this target (https://docs.aws.amazon.com/AmazonS3/latest/userguide/VirtualHosting.html#path-style-access). `auto` allows MinIO to chose automatically the appropriate option (Recommened)`
func (o S3BucketReplicationRuleTargetOutput) PathStyle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3BucketReplicationRuleTarget) *string { return v.PathStyle }).(pulumi.StringPtrOutput)
}

// Region of the target MinIO. This will be used to generate the target ARN
func (o S3BucketReplicationRuleTargetOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3BucketReplicationRuleTarget) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Secret key for the replication service account in the target MinIO. This is optional so it can be imported but prevent secret update
func (o S3BucketReplicationRuleTargetOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3BucketReplicationRuleTarget) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

func (o S3BucketReplicationRuleTargetOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v S3BucketReplicationRuleTarget) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

// The storage class to use for the object on this target
func (o S3BucketReplicationRuleTargetOutput) StorageClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3BucketReplicationRuleTarget) *string { return v.StorageClass }).(pulumi.StringPtrOutput)
}

// Use synchronous replication.
func (o S3BucketReplicationRuleTargetOutput) Syncronous() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v S3BucketReplicationRuleTarget) *bool { return v.Syncronous }).(pulumi.BoolPtrOutput)
}

type S3BucketVersioningVersioningConfiguration struct {
	ExcludeFolders   *bool    `pulumi:"excludeFolders"`
	ExcludedPrefixes []string `pulumi:"excludedPrefixes"`
	Status           string   `pulumi:"status"`
}

// S3BucketVersioningVersioningConfigurationInput is an input type that accepts S3BucketVersioningVersioningConfigurationArgs and S3BucketVersioningVersioningConfigurationOutput values.
// You can construct a concrete instance of `S3BucketVersioningVersioningConfigurationInput` via:
//
//	S3BucketVersioningVersioningConfigurationArgs{...}
type S3BucketVersioningVersioningConfigurationInput interface {
	pulumi.Input

	ToS3BucketVersioningVersioningConfigurationOutput() S3BucketVersioningVersioningConfigurationOutput
	ToS3BucketVersioningVersioningConfigurationOutputWithContext(context.Context) S3BucketVersioningVersioningConfigurationOutput
}

type S3BucketVersioningVersioningConfigurationArgs struct {
	ExcludeFolders   pulumi.BoolPtrInput     `pulumi:"excludeFolders"`
	ExcludedPrefixes pulumi.StringArrayInput `pulumi:"excludedPrefixes"`
	Status           pulumi.StringInput      `pulumi:"status"`
}

func (S3BucketVersioningVersioningConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3BucketVersioningVersioningConfiguration)(nil)).Elem()
}

func (i S3BucketVersioningVersioningConfigurationArgs) ToS3BucketVersioningVersioningConfigurationOutput() S3BucketVersioningVersioningConfigurationOutput {
	return i.ToS3BucketVersioningVersioningConfigurationOutputWithContext(context.Background())
}

func (i S3BucketVersioningVersioningConfigurationArgs) ToS3BucketVersioningVersioningConfigurationOutputWithContext(ctx context.Context) S3BucketVersioningVersioningConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3BucketVersioningVersioningConfigurationOutput)
}

func (i S3BucketVersioningVersioningConfigurationArgs) ToS3BucketVersioningVersioningConfigurationPtrOutput() S3BucketVersioningVersioningConfigurationPtrOutput {
	return i.ToS3BucketVersioningVersioningConfigurationPtrOutputWithContext(context.Background())
}

func (i S3BucketVersioningVersioningConfigurationArgs) ToS3BucketVersioningVersioningConfigurationPtrOutputWithContext(ctx context.Context) S3BucketVersioningVersioningConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3BucketVersioningVersioningConfigurationOutput).ToS3BucketVersioningVersioningConfigurationPtrOutputWithContext(ctx)
}

// S3BucketVersioningVersioningConfigurationPtrInput is an input type that accepts S3BucketVersioningVersioningConfigurationArgs, S3BucketVersioningVersioningConfigurationPtr and S3BucketVersioningVersioningConfigurationPtrOutput values.
// You can construct a concrete instance of `S3BucketVersioningVersioningConfigurationPtrInput` via:
//
//	        S3BucketVersioningVersioningConfigurationArgs{...}
//
//	or:
//
//	        nil
type S3BucketVersioningVersioningConfigurationPtrInput interface {
	pulumi.Input

	ToS3BucketVersioningVersioningConfigurationPtrOutput() S3BucketVersioningVersioningConfigurationPtrOutput
	ToS3BucketVersioningVersioningConfigurationPtrOutputWithContext(context.Context) S3BucketVersioningVersioningConfigurationPtrOutput
}

type s3bucketVersioningVersioningConfigurationPtrType S3BucketVersioningVersioningConfigurationArgs

func S3BucketVersioningVersioningConfigurationPtr(v *S3BucketVersioningVersioningConfigurationArgs) S3BucketVersioningVersioningConfigurationPtrInput {
	return (*s3bucketVersioningVersioningConfigurationPtrType)(v)
}

func (*s3bucketVersioningVersioningConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**S3BucketVersioningVersioningConfiguration)(nil)).Elem()
}

func (i *s3bucketVersioningVersioningConfigurationPtrType) ToS3BucketVersioningVersioningConfigurationPtrOutput() S3BucketVersioningVersioningConfigurationPtrOutput {
	return i.ToS3BucketVersioningVersioningConfigurationPtrOutputWithContext(context.Background())
}

func (i *s3bucketVersioningVersioningConfigurationPtrType) ToS3BucketVersioningVersioningConfigurationPtrOutputWithContext(ctx context.Context) S3BucketVersioningVersioningConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3BucketVersioningVersioningConfigurationPtrOutput)
}

type S3BucketVersioningVersioningConfigurationOutput struct{ *pulumi.OutputState }

func (S3BucketVersioningVersioningConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3BucketVersioningVersioningConfiguration)(nil)).Elem()
}

func (o S3BucketVersioningVersioningConfigurationOutput) ToS3BucketVersioningVersioningConfigurationOutput() S3BucketVersioningVersioningConfigurationOutput {
	return o
}

func (o S3BucketVersioningVersioningConfigurationOutput) ToS3BucketVersioningVersioningConfigurationOutputWithContext(ctx context.Context) S3BucketVersioningVersioningConfigurationOutput {
	return o
}

func (o S3BucketVersioningVersioningConfigurationOutput) ToS3BucketVersioningVersioningConfigurationPtrOutput() S3BucketVersioningVersioningConfigurationPtrOutput {
	return o.ToS3BucketVersioningVersioningConfigurationPtrOutputWithContext(context.Background())
}

func (o S3BucketVersioningVersioningConfigurationOutput) ToS3BucketVersioningVersioningConfigurationPtrOutputWithContext(ctx context.Context) S3BucketVersioningVersioningConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v S3BucketVersioningVersioningConfiguration) *S3BucketVersioningVersioningConfiguration {
		return &v
	}).(S3BucketVersioningVersioningConfigurationPtrOutput)
}

func (o S3BucketVersioningVersioningConfigurationOutput) ExcludeFolders() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v S3BucketVersioningVersioningConfiguration) *bool { return v.ExcludeFolders }).(pulumi.BoolPtrOutput)
}

func (o S3BucketVersioningVersioningConfigurationOutput) ExcludedPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v S3BucketVersioningVersioningConfiguration) []string { return v.ExcludedPrefixes }).(pulumi.StringArrayOutput)
}

func (o S3BucketVersioningVersioningConfigurationOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v S3BucketVersioningVersioningConfiguration) string { return v.Status }).(pulumi.StringOutput)
}

type S3BucketVersioningVersioningConfigurationPtrOutput struct{ *pulumi.OutputState }

func (S3BucketVersioningVersioningConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**S3BucketVersioningVersioningConfiguration)(nil)).Elem()
}

func (o S3BucketVersioningVersioningConfigurationPtrOutput) ToS3BucketVersioningVersioningConfigurationPtrOutput() S3BucketVersioningVersioningConfigurationPtrOutput {
	return o
}

func (o S3BucketVersioningVersioningConfigurationPtrOutput) ToS3BucketVersioningVersioningConfigurationPtrOutputWithContext(ctx context.Context) S3BucketVersioningVersioningConfigurationPtrOutput {
	return o
}

func (o S3BucketVersioningVersioningConfigurationPtrOutput) Elem() S3BucketVersioningVersioningConfigurationOutput {
	return o.ApplyT(func(v *S3BucketVersioningVersioningConfiguration) S3BucketVersioningVersioningConfiguration {
		if v != nil {
			return *v
		}
		var ret S3BucketVersioningVersioningConfiguration
		return ret
	}).(S3BucketVersioningVersioningConfigurationOutput)
}

func (o S3BucketVersioningVersioningConfigurationPtrOutput) ExcludeFolders() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *S3BucketVersioningVersioningConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.ExcludeFolders
	}).(pulumi.BoolPtrOutput)
}

func (o S3BucketVersioningVersioningConfigurationPtrOutput) ExcludedPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *S3BucketVersioningVersioningConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.ExcludedPrefixes
	}).(pulumi.StringArrayOutput)
}

func (o S3BucketVersioningVersioningConfigurationPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3BucketVersioningVersioningConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

type GetIamPolicyDocumentStatement struct {
	Actions    []string                                 `pulumi:"actions"`
	Conditions []GetIamPolicyDocumentStatementCondition `pulumi:"conditions"`
	Effect     *string                                  `pulumi:"effect"`
	Principal  *string                                  `pulumi:"principal"`
	Resources  []string                                 `pulumi:"resources"`
	Sid        *string                                  `pulumi:"sid"`
}

// GetIamPolicyDocumentStatementInput is an input type that accepts GetIamPolicyDocumentStatementArgs and GetIamPolicyDocumentStatementOutput values.
// You can construct a concrete instance of `GetIamPolicyDocumentStatementInput` via:
//
//	GetIamPolicyDocumentStatementArgs{...}
type GetIamPolicyDocumentStatementInput interface {
	pulumi.Input

	ToGetIamPolicyDocumentStatementOutput() GetIamPolicyDocumentStatementOutput
	ToGetIamPolicyDocumentStatementOutputWithContext(context.Context) GetIamPolicyDocumentStatementOutput
}

type GetIamPolicyDocumentStatementArgs struct {
	Actions    pulumi.StringArrayInput                          `pulumi:"actions"`
	Conditions GetIamPolicyDocumentStatementConditionArrayInput `pulumi:"conditions"`
	Effect     pulumi.StringPtrInput                            `pulumi:"effect"`
	Principal  pulumi.StringPtrInput                            `pulumi:"principal"`
	Resources  pulumi.StringArrayInput                          `pulumi:"resources"`
	Sid        pulumi.StringPtrInput                            `pulumi:"sid"`
}

func (GetIamPolicyDocumentStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIamPolicyDocumentStatement)(nil)).Elem()
}

func (i GetIamPolicyDocumentStatementArgs) ToGetIamPolicyDocumentStatementOutput() GetIamPolicyDocumentStatementOutput {
	return i.ToGetIamPolicyDocumentStatementOutputWithContext(context.Background())
}

func (i GetIamPolicyDocumentStatementArgs) ToGetIamPolicyDocumentStatementOutputWithContext(ctx context.Context) GetIamPolicyDocumentStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIamPolicyDocumentStatementOutput)
}

// GetIamPolicyDocumentStatementArrayInput is an input type that accepts GetIamPolicyDocumentStatementArray and GetIamPolicyDocumentStatementArrayOutput values.
// You can construct a concrete instance of `GetIamPolicyDocumentStatementArrayInput` via:
//
//	GetIamPolicyDocumentStatementArray{ GetIamPolicyDocumentStatementArgs{...} }
type GetIamPolicyDocumentStatementArrayInput interface {
	pulumi.Input

	ToGetIamPolicyDocumentStatementArrayOutput() GetIamPolicyDocumentStatementArrayOutput
	ToGetIamPolicyDocumentStatementArrayOutputWithContext(context.Context) GetIamPolicyDocumentStatementArrayOutput
}

type GetIamPolicyDocumentStatementArray []GetIamPolicyDocumentStatementInput

func (GetIamPolicyDocumentStatementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIamPolicyDocumentStatement)(nil)).Elem()
}

func (i GetIamPolicyDocumentStatementArray) ToGetIamPolicyDocumentStatementArrayOutput() GetIamPolicyDocumentStatementArrayOutput {
	return i.ToGetIamPolicyDocumentStatementArrayOutputWithContext(context.Background())
}

func (i GetIamPolicyDocumentStatementArray) ToGetIamPolicyDocumentStatementArrayOutputWithContext(ctx context.Context) GetIamPolicyDocumentStatementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIamPolicyDocumentStatementArrayOutput)
}

type GetIamPolicyDocumentStatementOutput struct{ *pulumi.OutputState }

func (GetIamPolicyDocumentStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIamPolicyDocumentStatement)(nil)).Elem()
}

func (o GetIamPolicyDocumentStatementOutput) ToGetIamPolicyDocumentStatementOutput() GetIamPolicyDocumentStatementOutput {
	return o
}

func (o GetIamPolicyDocumentStatementOutput) ToGetIamPolicyDocumentStatementOutputWithContext(ctx context.Context) GetIamPolicyDocumentStatementOutput {
	return o
}

func (o GetIamPolicyDocumentStatementOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIamPolicyDocumentStatement) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

func (o GetIamPolicyDocumentStatementOutput) Conditions() GetIamPolicyDocumentStatementConditionArrayOutput {
	return o.ApplyT(func(v GetIamPolicyDocumentStatement) []GetIamPolicyDocumentStatementCondition { return v.Conditions }).(GetIamPolicyDocumentStatementConditionArrayOutput)
}

func (o GetIamPolicyDocumentStatementOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIamPolicyDocumentStatement) *string { return v.Effect }).(pulumi.StringPtrOutput)
}

func (o GetIamPolicyDocumentStatementOutput) Principal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIamPolicyDocumentStatement) *string { return v.Principal }).(pulumi.StringPtrOutput)
}

func (o GetIamPolicyDocumentStatementOutput) Resources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIamPolicyDocumentStatement) []string { return v.Resources }).(pulumi.StringArrayOutput)
}

func (o GetIamPolicyDocumentStatementOutput) Sid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIamPolicyDocumentStatement) *string { return v.Sid }).(pulumi.StringPtrOutput)
}

type GetIamPolicyDocumentStatementArrayOutput struct{ *pulumi.OutputState }

func (GetIamPolicyDocumentStatementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIamPolicyDocumentStatement)(nil)).Elem()
}

func (o GetIamPolicyDocumentStatementArrayOutput) ToGetIamPolicyDocumentStatementArrayOutput() GetIamPolicyDocumentStatementArrayOutput {
	return o
}

func (o GetIamPolicyDocumentStatementArrayOutput) ToGetIamPolicyDocumentStatementArrayOutputWithContext(ctx context.Context) GetIamPolicyDocumentStatementArrayOutput {
	return o
}

func (o GetIamPolicyDocumentStatementArrayOutput) Index(i pulumi.IntInput) GetIamPolicyDocumentStatementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIamPolicyDocumentStatement {
		return vs[0].([]GetIamPolicyDocumentStatement)[vs[1].(int)]
	}).(GetIamPolicyDocumentStatementOutput)
}

type GetIamPolicyDocumentStatementCondition struct {
	Test     string   `pulumi:"test"`
	Values   []string `pulumi:"values"`
	Variable string   `pulumi:"variable"`
}

// GetIamPolicyDocumentStatementConditionInput is an input type that accepts GetIamPolicyDocumentStatementConditionArgs and GetIamPolicyDocumentStatementConditionOutput values.
// You can construct a concrete instance of `GetIamPolicyDocumentStatementConditionInput` via:
//
//	GetIamPolicyDocumentStatementConditionArgs{...}
type GetIamPolicyDocumentStatementConditionInput interface {
	pulumi.Input

	ToGetIamPolicyDocumentStatementConditionOutput() GetIamPolicyDocumentStatementConditionOutput
	ToGetIamPolicyDocumentStatementConditionOutputWithContext(context.Context) GetIamPolicyDocumentStatementConditionOutput
}

type GetIamPolicyDocumentStatementConditionArgs struct {
	Test     pulumi.StringInput      `pulumi:"test"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
	Variable pulumi.StringInput      `pulumi:"variable"`
}

func (GetIamPolicyDocumentStatementConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIamPolicyDocumentStatementCondition)(nil)).Elem()
}

func (i GetIamPolicyDocumentStatementConditionArgs) ToGetIamPolicyDocumentStatementConditionOutput() GetIamPolicyDocumentStatementConditionOutput {
	return i.ToGetIamPolicyDocumentStatementConditionOutputWithContext(context.Background())
}

func (i GetIamPolicyDocumentStatementConditionArgs) ToGetIamPolicyDocumentStatementConditionOutputWithContext(ctx context.Context) GetIamPolicyDocumentStatementConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIamPolicyDocumentStatementConditionOutput)
}

// GetIamPolicyDocumentStatementConditionArrayInput is an input type that accepts GetIamPolicyDocumentStatementConditionArray and GetIamPolicyDocumentStatementConditionArrayOutput values.
// You can construct a concrete instance of `GetIamPolicyDocumentStatementConditionArrayInput` via:
//
//	GetIamPolicyDocumentStatementConditionArray{ GetIamPolicyDocumentStatementConditionArgs{...} }
type GetIamPolicyDocumentStatementConditionArrayInput interface {
	pulumi.Input

	ToGetIamPolicyDocumentStatementConditionArrayOutput() GetIamPolicyDocumentStatementConditionArrayOutput
	ToGetIamPolicyDocumentStatementConditionArrayOutputWithContext(context.Context) GetIamPolicyDocumentStatementConditionArrayOutput
}

type GetIamPolicyDocumentStatementConditionArray []GetIamPolicyDocumentStatementConditionInput

func (GetIamPolicyDocumentStatementConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIamPolicyDocumentStatementCondition)(nil)).Elem()
}

func (i GetIamPolicyDocumentStatementConditionArray) ToGetIamPolicyDocumentStatementConditionArrayOutput() GetIamPolicyDocumentStatementConditionArrayOutput {
	return i.ToGetIamPolicyDocumentStatementConditionArrayOutputWithContext(context.Background())
}

func (i GetIamPolicyDocumentStatementConditionArray) ToGetIamPolicyDocumentStatementConditionArrayOutputWithContext(ctx context.Context) GetIamPolicyDocumentStatementConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIamPolicyDocumentStatementConditionArrayOutput)
}

type GetIamPolicyDocumentStatementConditionOutput struct{ *pulumi.OutputState }

func (GetIamPolicyDocumentStatementConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIamPolicyDocumentStatementCondition)(nil)).Elem()
}

func (o GetIamPolicyDocumentStatementConditionOutput) ToGetIamPolicyDocumentStatementConditionOutput() GetIamPolicyDocumentStatementConditionOutput {
	return o
}

func (o GetIamPolicyDocumentStatementConditionOutput) ToGetIamPolicyDocumentStatementConditionOutputWithContext(ctx context.Context) GetIamPolicyDocumentStatementConditionOutput {
	return o
}

func (o GetIamPolicyDocumentStatementConditionOutput) Test() pulumi.StringOutput {
	return o.ApplyT(func(v GetIamPolicyDocumentStatementCondition) string { return v.Test }).(pulumi.StringOutput)
}

func (o GetIamPolicyDocumentStatementConditionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIamPolicyDocumentStatementCondition) []string { return v.Values }).(pulumi.StringArrayOutput)
}

func (o GetIamPolicyDocumentStatementConditionOutput) Variable() pulumi.StringOutput {
	return o.ApplyT(func(v GetIamPolicyDocumentStatementCondition) string { return v.Variable }).(pulumi.StringOutput)
}

type GetIamPolicyDocumentStatementConditionArrayOutput struct{ *pulumi.OutputState }

func (GetIamPolicyDocumentStatementConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIamPolicyDocumentStatementCondition)(nil)).Elem()
}

func (o GetIamPolicyDocumentStatementConditionArrayOutput) ToGetIamPolicyDocumentStatementConditionArrayOutput() GetIamPolicyDocumentStatementConditionArrayOutput {
	return o
}

func (o GetIamPolicyDocumentStatementConditionArrayOutput) ToGetIamPolicyDocumentStatementConditionArrayOutputWithContext(ctx context.Context) GetIamPolicyDocumentStatementConditionArrayOutput {
	return o
}

func (o GetIamPolicyDocumentStatementConditionArrayOutput) Index(i pulumi.IntInput) GetIamPolicyDocumentStatementConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIamPolicyDocumentStatementCondition {
		return vs[0].([]GetIamPolicyDocumentStatementCondition)[vs[1].(int)]
	}).(GetIamPolicyDocumentStatementConditionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IlmPolicyRuleInput)(nil)).Elem(), IlmPolicyRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IlmPolicyRuleArrayInput)(nil)).Elem(), IlmPolicyRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3BucketNotificationQueueInput)(nil)).Elem(), S3BucketNotificationQueueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3BucketNotificationQueueArrayInput)(nil)).Elem(), S3BucketNotificationQueueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3BucketReplicationRuleInput)(nil)).Elem(), S3BucketReplicationRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3BucketReplicationRuleArrayInput)(nil)).Elem(), S3BucketReplicationRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3BucketReplicationRuleTargetInput)(nil)).Elem(), S3BucketReplicationRuleTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3BucketVersioningVersioningConfigurationInput)(nil)).Elem(), S3BucketVersioningVersioningConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3BucketVersioningVersioningConfigurationPtrInput)(nil)).Elem(), S3BucketVersioningVersioningConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIamPolicyDocumentStatementInput)(nil)).Elem(), GetIamPolicyDocumentStatementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIamPolicyDocumentStatementArrayInput)(nil)).Elem(), GetIamPolicyDocumentStatementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIamPolicyDocumentStatementConditionInput)(nil)).Elem(), GetIamPolicyDocumentStatementConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIamPolicyDocumentStatementConditionArrayInput)(nil)).Elem(), GetIamPolicyDocumentStatementConditionArray{})
	pulumi.RegisterOutputType(IlmPolicyRuleOutput{})
	pulumi.RegisterOutputType(IlmPolicyRuleArrayOutput{})
	pulumi.RegisterOutputType(S3BucketNotificationQueueOutput{})
	pulumi.RegisterOutputType(S3BucketNotificationQueueArrayOutput{})
	pulumi.RegisterOutputType(S3BucketReplicationRuleOutput{})
	pulumi.RegisterOutputType(S3BucketReplicationRuleArrayOutput{})
	pulumi.RegisterOutputType(S3BucketReplicationRuleTargetOutput{})
	pulumi.RegisterOutputType(S3BucketVersioningVersioningConfigurationOutput{})
	pulumi.RegisterOutputType(S3BucketVersioningVersioningConfigurationPtrOutput{})
	pulumi.RegisterOutputType(GetIamPolicyDocumentStatementOutput{})
	pulumi.RegisterOutputType(GetIamPolicyDocumentStatementArrayOutput{})
	pulumi.RegisterOutputType(GetIamPolicyDocumentStatementConditionOutput{})
	pulumi.RegisterOutputType(GetIamPolicyDocumentStatementConditionArrayOutput{})
}
